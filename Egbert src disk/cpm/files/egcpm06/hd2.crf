'hard-disk handler'	MACRO-80 3.44	09-Dec-81	PAGE	1


                                	title	'hard-disk handler'
                                
                                ;************************************************
                                ;*	H D  2 . M A C	Version : 3.2		*
                                ;*	Created	:	19-oct-87		*
                                ;*	by	:	Peter Petersen		*
                                ;*	Rev	:	22-oct-87..17-aug-89	*
                                ;*	weiter dran geschnitzt:			*
                                ;*	...08.07.90	H. Bernhardt		*
                                ;*      Januar 92       V.Dose                  *
                                ;*            pderr ge{ndert f}r Genie IIIs     *
                                ;*            angepasst an Harddisk 20.4 MByte  *
                                ;*                                              *
                                ;*  Version f}r Egbert Schr|er			*
                                ;*  Seagate ST225				*
                                ;************************************************
                                
TRUE  FFFF                          true	equ	-1
FALSE  0000                          false	equ	 0
BEL  0007                          bel     equ    07h
SUB  001A                          sub     equ    1AH
ESC  001B                          esc     equ    1BH
                                
HDWRITHDREADHDLOGIHDINIT                                public    hdwrit,hdread,hdlogi,hdinit
@ADRV@RDRV@DBNK@DMA@TRK@SECT                                external  @adrv,@rdrv,@dbnk,@dma,@trk,@sect
@CBNK@ERDME?PDERR                                external  @cbnk,@erdme,?pderr
?BANK                                external  ?bank          ;log. Bank (in A) einschalten
?PMSG                                external  ?pmsg          ; print message @<HL> up to 0,
?CONIN?CONO                                external  ?conin,?cono   ; console input and output
?CONST                                external  ?const         ; get console status
HDPORT  0040                          hdport	equ	040h		; hd-controller base address
HDSTATHDPORT  0041                          hdstat	equ	hdport+1	; hard disk status port
HDRESHDPORT  0041                          hdres	equ	hdport+1	; hard disk reset function
HDSELHDPORT  0042                          hdsel	equ	hdport+2	; hard disk select function
HDCONFHDPORT  0042                          hdconf	equ	hdport+2	; hard disk configuration port
HDMASKHDPORT  0043                          hdmask	equ	hdport+3	; hard disk DMA- and Interrupt-mask
                                
                                        .z80
  0000'                         	cseg			; residente Ruinen zum
                                  				; Verholen von/zu Banks
HDRD@DMA  0000'   2A 0000*              hdrd:	ld	hl,(@dma)	; set buffer address
@DBNK  0003'   3A 0000*              	ld	a,(@dbnk)
?BANK  0006'   CD 0000*              	call	?bank
HDPORT  0009'   01 0040               	ld	bc,hdport	; get hd port address
  000C'   ED B2                 	inir			; 512 Beitz reinziehen
  000E'   ED B2                 	inir
TERMCMD1  0010'   18 1B                 	jr	termcmd1	; if yes quit loop
                                
HDWR@DMA  0012'   2A 0000*              hdwr:	ld	hl,(@dma)	; set buffer address
@DBNK  0015'   3A 0000*              	ld	a,(@dbnk)
?BANK  0018'   CD 0000*              	call	?bank
HDPORT  001B'   0E 40                 	ld	c,hdport	; get hd port address
  001D'   ED A3                 	outi			; get first data byte
HDWRLPHDSTAT  001F'   DB 41                 hdwrlp:	in	a,(hdstat)	; get hdc status
  0021'   FE CF                 	cp	0cfh		; test if transfer is terminated
TERMCMD1  0023'   28 08                 	jr	z,termcmd1	; if yes quit loop
'hard-disk handler'	MACRO-80 3.44	09-Dec-81	PAGE	1-1


  0025'   FE C9                 	cp	0c9h		; data requested  ?
HDWRLP  0027'   20 F6                 	jr	nz,hdwrlp	; loop if not
WR_DAT  0029'   ED A3                 wr_dat:	outi			; write data
HDWRLP  002B'   18 F2                 	jr	hdwrlp		; and loop
                                
TERMCMD1  002D'                         termcmd1:			; aus dem Common heraus noch
  002D'   AF                    	xor	a		; schnell Bank 0 einschalten
?BANK  002E'   CD 0000*              	call	?bank
TERMCMD  0031'   C3 0035"                      jp      termcmd
  0034'                         	dseg
HDREADREADMSG  0000"   21 014F"              hdread:	ld	hl,readmsg	; point at ' Read '
HDRW_COMMON  0003"   CD 00A4"              	call	hdrw_common	; prepare command descriptor
  0006"   F3                    	di			; disable interrupts
  0007"   01 0508               	ld	bc,0508h	; get length and command
HDSCMD  000A"   CD 0116"              	call	hdscmd		; send command
RD1HDSTAT  000D"   DB 41                 rd1:	in	a,(hdstat)	; get hdc status
  000F"   FE CF                 	cp	0cfh		; test if status is to send
TERMCMD  0011"   CA 0035"              	jp	z,termcmd	; skip if yes
  0014"   FE CB                 	cp	0cbh		; test transfer direction
RD1  0016"   20 F5                 	jr	nz,rd1		; loop until o. k.
HDRD  0018"   C3 0000'              	jp	hdrd		; sektor holen
                                
HDWRITWRITEMSG  001B"   21 0157"              hdwrit:	ld	hl,writemsg	; point to ' Write '
HDRW_COMMON  001E"   CD 00A4"              	call	hdrw_common
  0021"   F3                    	di			; disable interrupts
  0022"   01 050A               	ld	bc,050ah	; get length and command
HDSCMD  0025"   CD 0116"              	call	hdscmd		; send command
WR1HDSTAT  0028"   DB 41                 wr1:	in	a,(hdstat)	; get hdc status
  002A"   FE CF                 	cp	0cfh		; test if status is to send
TERMCMD  002C"   28 07                 	jr	z,termcmd	; skip if yes
  002E"   FE C9                 	cp	0c9h		; test transfer direction
WR1  0030"   20 F6                 	jr	nz,wr1		; loop until o. k.
HDWR  0032"   C3 0012'              	jp	hdwr		; sektkorken wegdruecken
                                
TERMCMD  0035"                         termcmd:
  0035"   FB                    	ei			; test termination of command
  0036"   06 00                 	ld	b,0		; set retry count to 256
TR1HDSTAT  0038"   DB 41                 tr1:	in	a,(hdstat)	; get hdc status
  003A"   FE CF                 	cp	0cfh		; ready to read status  ?
TR2  003C"   28 07                 	jr	z,tr2		; skip if o. k.
TR1  003E"   10 F8                 	djnz	tr1		; else retry b times
HDMSG2  0040"   21 0171"              	ld	hl,hdmsg2	; print error mesage
TR3  0043"   18 08                 	jr	tr3
                                
TR2HDPORT  0045"   DB 40                 tr2:	in	a,(hdport)	; get command status
  0047"   E6 02                 	and	2		; to test completion
  0049"   C8                    	ret	z
                                
HDMSG1  004A"   21 0160"              	ld	hl,hdmsg1	; else print terminate error
TR3HDRES  004D"   D3 41                 tr3:	out	(hdres),a	; reset hdc
DSKERR  004F"   CD 00D0"              	call	dskerr		; print bios error message
  0052"   3E 01                 	ld	a,1
  0054"   C9                    	ret
                                
HDINITHDRES  0055"   D3 41                 hdinit:	out	(hdres),a	; reset hard-disk controller
GET_STHDSTAT  0057"   DB 41                 get_st:	in	a,(hdstat)	; get status
'hard-disk handler'	MACRO-80 3.44	09-Dec-81	PAGE	1-2


  0059"   FE C0                 	cp	0c0h		; test if hdc is idle
GET_ST  005B"   20 FA                 	jr	nz,get_st	; else loop until hdc is idle
                                
SETMSK  005D"   AF                    setmsk:	xor	a		; clear accu and send mask to disable
HDMASK  005E"   D3 43                 	out	(hdmask),a	; interrupt and dma from hard-disk
                                
W0HDSTAT  0060"   DB 41                 w0:	in	a,(hdstat)	; get status
  0062"   FE C0                 	cp	0c0h		; and wait until hdc is idle
W0  0064"   20 FA                 	jr	nz,w0
                                
                                ;	init hd controller with hd-drive-characteristics
                                
TRPARAIFIELD  0066"   21 0148"              trpara:	ld	hl,ifield	; point to init-parameter field
  0069"   01 050C               	ld	bc,050ch	; get command to set hd characteristics
HDSCMD  006C"   CD 0116"              	call	hdscmd		; send command
HD_CHARACT  006F"   21 0140"              	ld	hl,hd_charact	; point to table of hd characteristics
HDPORT  0072"   0E 40                 	ld	c,hdport	; get hd port
  0074"   06 08                 	ld	b,8		; get length of table
TR_P1HDSTAT  0076"   DB 41                 tr_p1:	in	a,(hdstat)	; get hdc status
  0078"   FE C9                 	cp	0c9h		; request for data --> hdc  ?
TR_P1  007A"   20 FA                 	jr	nz,tr_p1	; loop until hdc requests for data
NX1  007C"   18 06                 	jr	nx1		; else send data from data table
                                
NXTBYTWCR  007E"   CD 0109"              nxtbyt:	call	wcr		; wait for controller ready
WCR  0081"   CD 0109"              	call	wcr
NX1  0084"   7E                    nx1:	ld	a,(hl)		; get byte from table
  0085"   ED 79                 	out	(c),a		; send byte to hd controller
  0087"   23                    	inc	hl		; increment pointer
NXTBYT  0088"   10 F4                 	djnz	nxtbyt		; loop until done
                                
                                ;	test if command successfully completed
                                
RDY1HDSTAT  008A"   DB 41                 rdy1:	in	a,(hdstat)	; get hdc status
  008C"   FE CF                 	cp	0cfh		; test if status is to be send
RDY1  008E"   20 FA                 	jr	nz,rdy1		; loop until o. k.
HDPORT  0090"   DB 40                 	in	a,(hdport)	; get command status state
  0092"   CB 57                 	bit	2,a		; test if correctly terminated
PRI_OK  0094"   28 08                 	jr	z,pri_ok	; skip if o. k.
HDRES  0096"   D3 41                 	out	(hdres),a	; reset controller
HDMSG1  0098"   21 0160"              	ld	hl,hdmsg1	; else print hd-init-error
PRINT  009B"   C3 00EB"              	jp	print		; and return
                                
PRI_OKINIOK  009E"   21 018A"              pri_ok:	ld	hl,iniok	; print init o. k.
PRINT  00A1"   C3 00EB"              	jp	print
                                
                                
                                ;	prepare command descriptor block setting cylinder,
                                ;	sector and head addresses
                                ;
                                ;  Byte  |  D7  | D6  | D5  | D4  | D3  | D2  | D1  | D0  |
                                ;----------------------------------------------------------
                                ;   0    |  Command-Class   |       Operation-Code        |
                                ;   1    | cyl10   0    LUN |         Head Number         |   head
                                ;   2    | cyl9  cyl8 |         Sector Number             |   sect
                                ;   3    |      Cylinder Number, Low Byte (cyl7-0)        |   cylind
                                ;   4    |     Interleave or Block Count (always 1)       |   bcount
'hard-disk handler'	MACRO-80 3.44	09-Dec-81	PAGE	1-3


                                ;   5    |          Control Byte  (always 2)              |   termin
                                ;
                                
                                
HDRW_COMMON  00A4"                         hdrw_common:
HDC_RW  00A4"   22 014D"              	ld	(hdc_rw),hl	; save name of operation
@TRK  00A7"   ED 4B 0000*           	ld	bc,(@trk)	; get track #
  00AB"   79                    	ld	a,c		; get lsb of track #
CYLIND  00AC"   32 013D"              	ld	(cylind),a	; set lsb of track #
  00AF"   0E 00                 	ld	c,0
  00B1"   CB 18                 	rr	b		; move high byte of track #
  00B3"   CB 19                 	rr	c		; into bits 7 and 6 of C
  00B5"   CB 18                 	rr	b
  00B7"   CB 19                 	rr	c
  00B9"   06 00                 	ld	b,0		; head count
@SECT  00BB"   3A 0000*              	ld	a,(@sect)	; sector # (only low byte significant)
FDHEAD  00BE"   FE 1A                 fdhead:	cp	26		; find head #
HDS0  00C0"   38 05                 	jr	c,hds0		; if head 0
  00C2"   D6 1A                 	sub	26		; else convert to sector # and head #
  00C4"   04                    	inc	b		; next head, if more than 26 secs
FDHEAD  00C5"   18 F7                 	jr	fdhead
HDS0  00C7"   B1                    hds0:	or	c
SECT  00C8"   32 013C"              	ld	(sect),a	; set sector and track msb
  00CB"   78                    	ld	a,b		; head #
HEAD  00CC"   32 013B"              	ld	(head),a
  00CF"   C9                    	ret
                                	
                                ; suppress error message if BDOS is returning errors to application...
                                
DSKERR  00D0"                         dskerr:
@ERDME  00D0"   3A 0000*              	ld	a,(@erdme)
  00D3"   FE FF                 	cp	0ffh
PR_ERR  00D5"   20 05                 	jr	nz,pr_err
  00D7"   F1                    	pop	af		; correct stack
HARDERROR  00D8"                         harderror:
  00D8"   3E 01                 	ld	a,1		; get hard-error code
  00DA"   FB                    	ei			; enable interrupts
  00DB"   C9                    	ret			; and return to bdos
                                
                                ; Had permanent error, print message like :
                                ; BIOS Err on d: T-nn, S-mm, <operation> <type>, Retry ?
                                
PR_ERR?PDERR  00DC"   CD 0000*              pr_err:	call	?pderr		; print message header
HDC_RW  00DF"   2A 014D"                      ld      hl,(hdc_rw)     ; READ oder WRITE
?PMSG  00E2"   CD 0000*                      call    ?pmsg
FRAGEAB  00E5"   CD 00EF"                      call    frageab         ; Eingabe holen
MSGEND  00E8"   21 01A4"                      ld      hl,msgend       ; Statuszeile aus
PRINT?PMSG  00EB"   CD 0000*              print:  call    ?pmsg
HDLOGI  00EE"   C9                    hdlogi:	ret			; dummy vector, hard-disk login
                                
                                ; get console input, echo it and shift to uppercase
                                
FRAGEAB?CONST  00EF"   CD 0000*              frageab:  call ?const
  00F2"   B7                              or   a
ISTDA  00F3"   28 05                           jr   z,istda
?CONIN  00F5"   CD 0000*                        call ?conin
FRAGEAB'hard-disk handler'	MACRO-80 3.44	09-Dec-81	PAGE	1-4


  00F8"   18 F5                           jr   frageab
ISTDA?CONIN  00FA"   CD 0000*              istda:    call ?conin
  00FD"   F5                              push af
  00FE"   4F                              ld   c,a
?CONO  00FF"   CD 0000*                        call ?cono
  0102"   F1                              pop  af
  0103"   FE 41                           cp   'A'
  0105"   D8                              ret  c
  0106"   E6 DF                           and  0dfh
  0108"   C9                              ret
                                
                                
                                
                                ; hard disk subroutines
                                
                                ; wait controller ready
WCR  0109"   C5                    wcr:	push	bc		; save bc
  010A"   06 00                 	ld	b,0		; set retry count to 256
WCR1HDSTAT  010C"   DB 41                 wcr1:	in	a,(hdstat)	; get hd controller status
  010E"   CB 47                 	bit	0,a		; test for data request
WCR2  0110"   20 02                 	jr	nz,wcr2		; quit if request
WCR1  0112"   10 F8                 	djnz	wcr1		; else wait for request
WCR2  0114"   C1                    wcr2:	pop	bc		; restore bc
  0115"   C9                    	ret
                                
                                ;hd send command	hl -->	parameterlist
                                ;			b  -->	count
                                ;			c  -->	command
HDSCMDHDSTAT  0116"   DB 41                 hdscmd:	in	a,(hdstat)	; get hdc status
  0118"   FE C0                 	cp	0c0h		; to test if hdc is idle
HDC_ID  011A"   28 04                 	jr	z,hdc_id	; skip if o. k.
HDRES  011C"   D3 41                 	out	(hdres),a	; else reset hdc
HDSCMD  011E"   18 F6                 	jr	hdscmd		; and try again
HDC_IDHDSEL  0120"   D3 42                 hdc_id:	out	(hdsel),a	; select hd controller
CFIELD  0122"   21 013B"              	ld	hl,cfield	; set pointer to command field
WCR  0125"   CD 0109"              	call	wcr		; wait for controller ready
WCR  0128"   CD 0109"              	call	wcr
  012B"   79                    	ld	a,c		; get command
HDPORT  012C"   D3 40                 	out	(hdport),a	; to send it
NXTPARWCR  012E"   CD 0109"              nxtpar:	call	wcr		; wait for controller ready
WCR  0131"   CD 0109"              	call	wcr
  0134"   7E                    	ld	a,(hl)		; fetch next parameter
HDPORT  0135"   D3 40                 	out	(hdport),a	; to send it
  0137"   23                    	inc	hl		; increment parameter pointer
NXTPAR  0138"   10 F4                 	djnz	nxtpar		; and loop until done
HD1INI  013A"   C9                    hd1ini:	ret
                                
                                ;  hard disk data area
CFIELD  013B"                         cfield:				; hdc command field
HEAD  013B"   00                    head:	db	0		; selected head, lun and c10
SECT  013C"   00                    sect:	db	0		; sector #, c8 and c9
CYLIND  013D"   00                    cylind:	db	0		; cylinder #  < modulo 256 >
BCOUNT  013E"   01                    bcount:	db	1		; block count
TERMIN  013F"   02                    termin:	db	2		; step rate --> 25 us
                                
HD_CHARACT  0140"                         hd_charact:			; drive characteristics
'hard-disk handler'	MACRO-80 3.44	09-Dec-81	PAGE	1-5


                                				; 612 cylinders, 2 heads
  0140"   02                    	db	2		; last cylinder  (msb)
  0141"   67                    	db	67h		; last cylinder  (lsb)
  0142"   04                    	db	4		; 2 heads
  0143"   02 58                 	db	02h,58h		; start cyl reduced wr current
  0145"   01 2C                 	db	01h,2ch		; start cyl wr precomp
  0147"   00                    	db	0		; always zero
                                
IFIELD  0148"   00 00 00 00           ifield:	db	0,0,0,0,0	; hard disk init-parameter field
  014C"   00                    
                                
                                ;	error message components
HDC_RWREADMSG  014D"   014F"                 hdc_rw:		dw	readmsg
READMSG  014F"   2C 20 52 65           readmsg:	db	', Read ',0
  0153"   61 64 20 00           
WRITEMSG  0157"   2C 20 57 72           writemsg:	db	', Write ',0
  015B"   69 74 65 20           
  015F"   00                    
HDMSG1  0160"   07                    hdmsg1:		db	7
  0161"   48 61 72 64           		db	'Hard Disk Error'
  0165"   20 44 69 73           
  0169"   6B 20 45 72           
  016D"   72 6F 72              
  0170"   00                    		db	0
HDMSG2  0171"   07                    hdmsg2:		db	7
  0172"   43 6F 6D 6D           		db	'Command Terminate Error'
  0176"   61 6E 64 20           
  017A"   54 65 72 6D           
  017E"   69 6E 61 74           
  0182"   65 20 45 72           
  0186"   72 6F 72              
  0189"   00                    		db	0
INIOK  018A"   53 65 61 67           iniok:		db	'Seagate ST 225/ 21.4 MB'
  018E"   61 74 65 20           
  0192"   53 54 20 32           
  0196"   32 35 2F 20           
  019A"   32 31 2E 34           
  019E"   20 4D 42              
  01A1"   0D 0A 00              		db	13,10,0		
MSGENDSUBESC  01A4"   1A 1B 44 00           msgend:         db      sub,esc,'D',0
                                
                                
                                
                                
                                	end
'hard-disk handler'	MACRO-80 3.44	09-Dec-81	PAGE	S


Macros:

Symbols:
002F*	?BANK           00FB*	?CONIN          0100*	?CONO           
00F0*	?CONST          00DD*	?PDERR          00EC*	?PMSG           
0000*	@ADRV           0000*	@CBNK           0016*	@DBNK           
0013*	@DMA            00D1*	@ERDME          0000*	@RDRV           
00BC*	@SECT           00A9*	@TRK            013E"	BCOUNT          
0007 	BEL             013B"	CFIELD          013D"	CYLIND          
00D0"	DSKERR          001B 	ESC             0000 	FALSE           
00BE"	FDHEAD          00EF"	FRAGEAB         0057"	GET_ST          
00D8"	HARDERROR       013A"	HD1INI          0042 	HDCONF          
0120"	HDC_ID          014D"	HDC_RW          0055I"	HDINIT          
00EEI"	HDLOGI          0043 	HDMASK          0160"	HDMSG1          
0171"	HDMSG2          0040 	HDPORT          0000'	HDRD            
0000I"	HDREAD          0041 	HDRES           00A4"	HDRW_COMMON     
00C7"	HDS0            0116"	HDSCMD          0042 	HDSEL           
0041 	HDSTAT          0012'	HDWR            001BI"	HDWRIT          
001F'	HDWRLP          0140"	HD_CHARACT      013B"	HEAD            
0148"	IFIELD          018A"	INIOK           00FA"	ISTDA           
01A4"	MSGEND          0084"	NX1             007E"	NXTBYT          
012E"	NXTPAR          00EB"	PRINT           009E"	PRI_OK          
00DC"	PR_ERR          000D"	RD1             008A"	RDY1            
014F"	READMSG         013C"	SECT            005D"	SETMSK          
001A 	SUB             0035"	TERMCMD         002D'	TERMCMD1        
013F"	TERMIN          0038"	TR1             0045"	TR2             
004D"	TR3             0066"	TRPARA          FFFF 	TRUE            
0076"	TR_P1           0060"	W0              0109"	WCR             
010C"	WCR1            0114"	WCR2            0028"	WR1             
0157"	WRITEMSG        0029'	WR_DAT          



No Fatal error(s)

 
   008A"	RDY1            
014F"	READMSG         013C"	SECT            005D"	SETMSK          