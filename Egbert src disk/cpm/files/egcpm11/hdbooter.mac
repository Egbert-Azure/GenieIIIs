;******************************************************************************
;*  B O O T E R  *  C P M S Y S 2  *  T h o m a s   H o l t e  *  8 5 1 1 2 0 *
;******************************************************************************
;*									      *
;*    B O O T S T R A P   L O A D E R   F O R   C P / M   3   O N   T H E     *
;*    ===================================================================     *
;*									      *
;*        G E N I E  I I I s   M I C R O C O M P U T E R   S Y S T E M        *
;*	  ============================================================        *
;*									      *
;*									      *
;*  Thomas Holte			                         Version 1.1  *
;*									      *
;*									      *
;*   ge{ndert von Volker Dose, um von einer Harddisk zu booten.               *
;*	Nov. 1992							      *
;*   Dies ist die Version f]r Egbert Schr\er, also f]r eine Hard-	      *
;*   Disk mit 20 MByte. Die Speicherung der Seriennummer entf[llt, weil       * 
;*   sie Illegals enth[lt, die auf dem Z180 zum Absturz f]hren.     	      *
;*      Feb. 1993							      *
;*									      *
;******************************************************************************
  
	.Z80

	ASEG
	ORG  0000H

;hier erst ein mal ein Verschiebeprogramm, mein Booteprom ist f}r GDOS
;ausgelegt, und l{dt die ersten 2 sektoren nach 4200 und springt die dann an
;der Bootstraploader muss danach nach fc00 geschiftet werden.

	.PHASE 4200H
	DI
	LD	A,0C4H		;muss so sein
	OUT	($SYS1),A	;
	LD	SP,41E0H
	
	ld	HL,begin	;alles was nach FC00 assembliert wird
	ld	de,0fc00h
	ld	bc,01ffh	;schad ja nix
	ldir
	jp	0FC00h		;und den 'WAHREN' Lader anspringen.
	
begin:	
	
	.DEPHASE
			
	
	.PHASE 0FC00H

;load CP/M-system:
SECLEN	EQU  512		;length of a disk sector
$BUZZ	EQU  3860H		;buzzer address
$SYS0	EQU  0F9H		;port of system byte 0
$SYS1	EQU  0FAH		;port of system byte 1

	DI			;disable interrupts
	IM   1
	LD   SP,0FC00H		;init stackpointer

;clear screen:
	LD   A,00000001B	;enable bank 0
				;disable character RAM
	OUT  ($SYS0),A		;write system byte 0
	LD   A,01010100B	;enable memory mapped I/O
				;disable graphic display
				;disable boot EPROM
				;disable graphic page
				;enable full screen
				;disable video display
	OUT  ($SYS1),A		;write system byte 1

	.XLIST
	.XCREF

	.CREF
	.LIST

	LD   HL,3800H
	LD   DE,3801H
	LD   BC,7FFH
	LD   (HL),' '
	LDIR
	LD   A,11000101B	;disable memory mapped I/O
				;disable graphic display
				;disable boot EPROM
				;disable graphic page
				;enable keyboard
				;enable video display
	OUT  ($SYS1),A		;write system byte 1

;read first two tracks:
	LD   B,34              	;sector counter	        --> reg. B
LOOP: 	PUSH BC        		;save it
	CALL RDSEC 		;read selected sector into main memory
	OR   A			;disk error ?
	JP   NZ,ERROR
	LD   HL,(BUFFER)
	LD   BC,SECLEN
	ADD  HL,BC		;calc new load address
	LD   (BUFFER),HL
	LD   A,(SECTOR)
	INC  A			;increment sector #

;hierzu mu~ gesagt werden, das das COPYSYS leider nciht begreift, wie meine
;Harddisk angelegt ist, also nicht 136 128Byte Einheiten wie im DPB sondern
;nur 80 Einheiten wie das Floppyformat. Also muss hier nach 20 Sektoren 
;(entspricht 80 * 128Byte) der n{chste Track angefahren werden
; Macht ja auch nix



 	CP   20			;track exhausted ?
	JR   NZ,NXTSEC		;jump if not
	ld   a,1
	ld   (trk),a		;step in one track
	XOR  A			;reset sector #	
NXTSEC: LD   (SECTOR),A		;store sector #
	POP  BC			;restore sector counter
     	DJNZ LOOP		;read next sector

;move common code to the right place:
	LD   HL,3505H          	;source address      --> reg. HL
	LD   DE,0FE05H		;destination address --> reg. DE
	LD   BC,1FBH            ;byte count	     --> reg. BC	
	LDIR

;move CP/M loader to the right place:
	LD   HL,3700H          	;source address      --> reg. HL
	LD   DE,4400H		;destination address --> reg. DE
	LD   BC,0C80H           ;byte count	     --> reg. BC	
	LDIR
	JP   4400H		;jump into CP/M loader



;Routine liesst einen Sektor von der Harddisk.

; Die Sektornummer steht in SEKTOR
; Die Adresse wo der Gammel hin soll steht in BUFFER
; Die Routine ist aus dem LDRBIOHD.MAC meines Systems. Die Kommentare finden
; sich im HD2/MAC. Hier hab ichs mir gespart.

RDSEC:


hdport	equ	40h
hdstat	equ	hdport+1
hdres	equ	hdport+1
hdsel	equ	hdport+2
hdconf	equ	hdport+2
hdmask	equ	hdport+3

hdread:	xor	a
	ld	(head),a
	ld	bc,(trk)
	ld	a,c
	ld	(cylind),a
	rr	b
	rr	c
	rr	b
	rr	c
	ld	a,c
	and	0c0h
	ld	c,a
	ld	hl,head
	ld	a,(SECTOR)
	cp	17
	jr	c,hds0
	sub	17
	set	0,(hl)
	jr	hdsok
hds0:	res	0,(hl)
hdsok:	or	c
	ld	(sect),a
	
rdsect:	di
	ld	bc,0508h
	call	hdscmd
rd1$:	in	a,(hdstat)
	cp	0cfh
	jr	z,termcmd
	cp	0cbh
	jr	nz,rd1$
	ld	hl,(BUFFER)
	ld	c,hdport
	jr	rd_dat
	
hdrdlp:	in	a,(hdstat)
	cp	0cfh
	jr	z,termcmd
	cp	0cbh
	jr	nz,hdrdlp
rd_dat:	ini
	jr	hdrdlp
	
termcmd:
	ld	c,8
tr$:	ld	b,0
tr$1:	in	a,(hdstat)
	cp	0cfh
	jr	z,tr$2
	djnz	tr$1
	jr	tr$3
	dec	c
	jr	nz,tr$
	
tr$2:	in	a,(hdport)
	and	2
	jr	z,exit
tr$3:	jp	ERROR
	ld	a,1
exit:	ret



cfield:
head:	db	0
sect:	db	0
cylind:	db	0
bcount:	db	1
termin:	db	2

	
wcr:	push	bc
	ld	b,0
wcr1:	in	a,(hdstat)
	bit	0,a
	jr	nz,wcr2
	djnz	wcr1
wcr2:	pop	bc
	ret
	
	
hdscmd:	in	a,(hdstat)
	cp	0c0h
	jr	z,hdc_id
	xor	a
	out	(hdres),a
	jr	hdscmd
hdc_id:	out	(hdsel),a
	call	wcr
	ld	a,c
	out	(hdport),a
	ld	c,40h
nxbhd:	call	wcr
	outi
	jr	nz,nxbhd
	ret
								
DELAY:	dec	bc
	ld	a,b
	or	c
	jr	nz,delay
	ret
		


trk:	dw	0000		;current track #
SECTOR:	DEFB 1			;current sector #
BUFFER:	DEFW 0000               ;current load address


*EJECT
ERROR:  ld	hl,cfield	;der Verschiebebefehl sichert den
	ld	de,8000h	;letzten Parameterblock zum 
	ld	bc,5		;Begucken an eine sichere Stelle
	ldir
	LD   A,11000100B	;enable memory mapped I/O
	OUT  ($SYS1),A		;write system byte 1

	LD   HL,MSG		;^message		--> reg. HL	
        LD   DE,3C00H		;^first screen position --> reg. DE
	LD   BC,COPYRGT-MSG	;length of message	--> reg. BC
	LDIR			;output error message
	LD   B,100		;beep counter  --> reg. B
ALARM:	PUSH BC			;save counter

	LD   BC,0     		;repeat counter --> reg. B
                                ;  wait counter --> reg. C
BEEP:	LD   A,($BUZZ)		;turn on buzzer
	PUSH BC			;save base value of wait counter
BUZZON:	NOP			;little delay for lower frequency
	NOP
	NOP
	DEC  C			;decrement wait counter
	JR   NZ,BUZZON		;wait `til end of buzz
	POP  BC			;restore wait counter
	DJNZ BEEP		;turn on buzzer eleven times
	
	LD   BC,8000
        CALL DELAY

	POP  BC			;restore beep counter
	DJNZ ALARM		;beep 100 times
	JR   $			;hang up		

MSG:	DEFM 'HARD-DISK ERROR'

COPYRGT:DEFM 'Enhanced BIOS written by Thomas Holte  (c) 1985'
SERNO:	DEFS 7			;serial number field
	.DEPHASE


*EJECT
	ORG  01E0H

LDRBYTE:DEFB 2


	END
