;******************************************************************************
;*  P 3 I O  *  C P M S Y S 5 a  *  T h o m a s   H o l t e  *  8 4 0 8 2 6   *
;******************************************************************************
;*									      *
;*     S P E C I A L   D I S K   D R I V E R   E N T R Y   R O U T I N E      *
;*     =================================================================      *
;*									      *
;*  		      F O R   R E A D / W R I T E   O F			      *
;*		      =================================			      *
;*									      *
;*	    a l p h a T r o n i c   P 3 / P 4 - D I S K E T T E S             *
;*	    =====================================================    	      *
;*									      *
;*									      *
;*  Thomas Holte			                         Version 1.0  *
;*									      *
;******************************************************************************
  
	.Z80

	GLOBAL READF,WRITEF,IOLENGTH

$READ	EQU  11			;read a disk sector
$WRITE	EQU  12			;write a disk sector

IOLENGTH:			;length of driver routine
	DEFW ENDIO-READF

READF:	LD   C,$READ            ;vector # --> reg. C
	JR   TASK

WRITEF:	LD   C,$WRITE           ;vector # --> reg. C

TASK:   PUSH AF        		;save drive #
	LD   A,B		;sector # --> accu
	CP   5
	LD   A,E       		;track #  --> accu
	JR   C,TASK1		;jump if sector # is lower than 5
	OR   A			;track 0 ?
	JR   NZ,TASK2  		;jump if not track 0
	INC  E			;convert track # to 1
	LD   A,B       		;sector # --> accu
	SUB  5			;convert it
	LD   B,A       		;store it
	JR   TASK2
TASK1: 	DEC  A			;track 1 ?
	JR   NZ,TASK2     	;jump if not track 1
	LD   E,A		;convert track # to 0
	LD   A,B       		;sector # --> accu
	ADD  A,5		;convert it
	LD   B,A		;store it
TASK2:	POP  AF   		;restore drive #
	LD   IX,(00001H)	;WBOOT entry point --> reg. IX
	PUSH DE			;save track #
	LD   DE,30H		;calc jump address
	ADD  IX,DE
	POP  DE
	JP   (IX)		;call driver 

ENDIO 	EQU  $

	END
	