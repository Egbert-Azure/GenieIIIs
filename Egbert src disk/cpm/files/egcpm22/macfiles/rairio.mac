;******************************************************************************
;*  R A I R I O  *  C P M S Y S 7 a  *  T h o m a s   H o l t e * 8 5 0 1 0 4 *
;******************************************************************************
;*									      *
;*     S P E C I A L   D I S K   D R I V E R   E N T R Y   R O U T I N E      *
;*     =================================================================      *
;*									      *
;*  		      F O R   R E A D / W R I T E   O F			      *
;*		      =================================			      *
;*									      *
;*	      R A I R - S u p e r m i c r o - D I S K E T T E S               *
;*	      =================================================      	      *
;*									      *
;*									      *
;*  Thomas Holte			                         Version 1.0  *
;*									      *
;******************************************************************************
  
	.Z80

	GLOBAL READF,WRITEF,IOLENGTH

$READ	EQU  11			;read a disk sector
$WRITE	EQU  12			;write a disk sector

IOLENGTH:			;length of driver routine
	DEFW ENDIO-READF

READF:	LD   C,$READ            ;vector # --> reg. C
	JR   TASK

WRITEF:	LD   C,$WRITE           ;vector # --> reg. C

TASK:   PUSH AF        		;save drive #
	PUSH HL 		;save buffer pointer
	PUSH BC			;save function #
	LD   A,D		;track # (MSB) 			    --> accu
	LD   C,E       		;track # (LSB) 			    --> reg. C
	LD   DE,20  		;number of physical sectors / track --> reg. DE
	LD   HL,0		;clear accumulator
	LD   B,16		;init counter
LOOP16:	RL   C			;rotate result left
	RLA
	ADC  HL,HL		;shift left
	SBC  HL,DE     		;subtract divisor
	JR   NC,$+3		;subtraction ok
        ADD  HL,DE		;restore accumulator
	CCF			;restore carry flag
	DJNZ LOOP16		;counter = 0 ?
	RL   C         		;get last result bit
	RLA
	LD   E,C		;now reg. E contains track #
	POP  BC			;restore function #
        LD   B,L 		;now reg. B contains sector #
	POP  HL			;restore buffer pointer
	POP  AF			;restore drive #
	LD   IX,(00001H)	;WBOOT entry point --> reg. IX
	PUSH DE			;save track #
	LD   DE,30H		;calc jump address
	ADD  IX,DE
	POP  DE
	JP   (IX)		;call driver 

ENDIO 	EQU  $

	END
	