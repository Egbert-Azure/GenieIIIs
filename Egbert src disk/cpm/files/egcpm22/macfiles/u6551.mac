;******************************************************************************
;*  U 6 5 5 1  *  C P M S Y S X X X  *  T h o m a s   H o l t e * 8 4 1 2 2 1 *
;******************************************************************************
;*									      *
;*  	      H A R D W A R E   I N T E R F A C E   O F   B S T A M   	      *
;*	      =====================================================	      *
;*									      *
;*   C O M M U N I C A T I O N   S O F T W A R E   T O   T H E   S E R I A L  *
;*   =======================================================================  *
;*									      *
;*       C O M M U N I C A T I O N   C H I P   S Y 6 5 5 1   O F   T H E      *
;*	 ===============================================================      *
;*									      *
;*  	    A P P L E   I I   M I C R O C O M P U T E R   S Y S T E M         *
;* 	    ========================================================= 	      *
;*									      *
;*									      *
;*  Version 1.0							Thomas Holte  *
;*									      *
;******************************************************************************

	.Z80

	ASEG
	ORG  0103H			 

;ASCII control codes:
LF	EQU  0AH		;line feed
CR	EQU  0DH		;carriage return

BDOS	EQU  0005H		;BDOS entry point


INITIL:	JP   INITIU		;initialization entry point
INSPORT:JP   INSPRU		;status port read entry port
ERRSET:	JP   ERRSTU		;error reset entry point
INPORT:	JP   INPRTU		;read data port entry point
OUTPORT:JP   OUTPRU		;write data port entry point
DUART:	RET
	NOP
	NOP
DUARTU:	RET		


;addresses below are valid for slot 2 only:
RDR	EQU  0E0ACH		;receive  data register
TDR	EQU  0E0ACH		;transmit data register
SR 	EQU  0E0ADH		;status register
CMDR	EQU  0E0AEH		;command register

;print signon message:
INITIU:	LD   DE,SIGNON		;^signon message --> reg. DE
	LD   C,9		;function #	 --> reg. C
	CALL BDOS 		;print message and return to caller
	LD   A,0BH		;init USART
	LD   (CMDR),A
	RET

SIGNON:	DEFB CR,LF,CR,LF
	DEFM 'Special version for the Apple II Microcomputer System'
	DEFB CR,LF
	DEFM 'with the Microsoft SoftCard'
	DEFB CR,LF,CR,LF,'$'

;status input routine:
INSPRU:	LD   A,(SR)		;read line status
	PUSH BC			;save reg. BC
	LD   C,A		;status --> reg. C
	XOR  A			;clear accu
	BIT  1,C		;framing error ?
	JR   Z,OVERRUN		;jump if not	
	SET  5,A		;return framing error
OVERRUN:BIT  2,C		;overrun error ?
	JR   Z,PARITY		;jump if not
	SET  4,A		;return overrun error
PARITY:	BIT  0,C		;parity error ?
	JR   Z,TEMPTY		;jump if not
	SET  3,A		;return parity error
TEMPTY:	BIT  4,C		;transmitter empty ?
	JR   Z,RREADY		;jump if not
	SET  0,A		;return transmitter empty
RREADY:	BIT  3,C		;data ready ?
	JR   Z,RETURN		;jump if not
       	SET  1,A		;return receiver ready
RETURN:	POP  BC			;restore reg. BC
	SET  2,A		;return transmitter ready
	RET

;error reset routine:
ERRSTU:	LD   (SR),A
	LD   A,0BH
	LD   (CMDR),A
	RET

;data port input:
INPRTU:	LD   A,(RDR)		;read receiver buffer
	RET

;data port output:
OUTPRU:	LD   (TDR),A		;write byte to transmitter
	RET

	END
