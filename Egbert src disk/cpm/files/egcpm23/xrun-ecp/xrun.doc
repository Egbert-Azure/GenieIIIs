

				XRUN Version 2.2
			     (C) 1990 Olaf Krumnow

Zweck:

XRUN ist ein Erweiterter Kommandoprozessor (ECP) f}r ZCPR3.3. Er sucht 
Dateien entlang	 des  Suchpfades  und  baut eine  Kommandozeile	 abh{ngig 
vom TYP  der gefundenen  Datei  auf. Wird  keine  passende Datei  gefunden, 
so  kann   ein Defaultkommando	gestartet werden, um z.B. auf einen 
weiteren ECP zu verzweigen.

Aufruf:   XRUN	<kommandoverb> [<kommandozeile>]

]blicherweise wird XRUN	nicht direkt aufgerufen, sondern als ECP gestartet.

Beschr{nkungen:      XRUN ist ein reines ZCPR3.3-Programm.

Anwendungen:


XRUN dient als ECP und vereinfacht so den Aufruf von Dateien speziellen	
Typs. So kann  z.B. eine SUB-Datei durch einfache Angabe ihres Namens  
gestarten werden, wenn  in XRUN f}r den Dateityp SUB eine passende Zeile 
installiert ist. Bei  der Einrichtung  von  XRUN mu~ genau auf die 
Reihenfolge geachtet werden,  wie  XRUN arbeitet.  

XRUN sucht nach einer Datei FILENAME.???, wobei FILENAME  durch  das 
Kommandoverb  ersetzt wird,  entlang des Pfades.  Wird ein  passender	 
Eintrag gefunden  (benutzt werden die BDOS-Funktionen 17/18 SearchFirst 
/SearchNext),  so vergleicht XRUN  den	Dateityp  der  gefundenen  Datei  
mit  der Liste der installierten Dateitypen. Bei ]bereinstimmung wird die 
installierte Kommandozeile aufgebaut und zur Ausf}hrung an den CCP gegeben. 

Ist der	Dateityp nicht installiert, so sucht XRUN im gleichen  Directory  
weiter,  bis  keine passende  Datei mehr gefunden wird. Erst dann wird im	
n{chsten  Directory  des Pfades gesucht. 

Ein Beispiel: Der Pfad sei A0: I0: E0:.

Das Dir	von A0:	ist      TEST.SUB ! TEST.DAT ! X.SUB

von I0:                  X.MAC !	TEST.COM ! Y.ZEX

und von	E0:              TEST.LBR ! COMMAND.LBR ! SIZE.CHN

In XRUN	sind folgende Dateitypen installiert: SUB  ZEX  LBR

Bei Aufruf vonTEST wird jetzt (vom CCP) I0:TEST.COM gestartet. Bei Aufruf 
von  TEST (beachte das f}hrende Leerzeichen) wird (von XRUN) A0:TEST.SUB  
gestartet. X startet A0:X.SUB, COMMAND startet E0:COMMAND.LBR.

F}r  jeden  gew}nschten	 Dateityp kann in XRUN	eine  Kommandozeile  
installiert werden, die  zur  Ausf}hrung  gelangt, sobald XRUN  eine  dazu	
passende  Datei gefunden  hat.	In diese Kommandozeile k|nnen Informationen 
}ber die gefundene Datei und ihr Directory eingebaut werden, sowie einige  
andere  Kleinigkeiten. Diese Kommandos	sind:

   $N  Dateiname (Kommandoverb)	ohne Punkt
   $T  Dateityp	ohne Punkt
   $F  kompletter Dateiname mit	Punkt
   $D  Laufwerk, wo die	Datei gefunden wurde, ohne Doppelpunkt
   $U  User entsprechend
   $B  komplette Directoryangabe zum Fundort, mit Doppelpunkt
   $H  aktives Directory beim Start von	XRUN, mit Doppelpunkt
   $!  komplette Kommandozeile mit Kommandoverb
   $*  Kommandozeile ohne Kommandoverb (command	tail)
   $$  Das $-Zeichen selber

Hiermit	  k|nnen  jetzt	 Kommandozeilen	 aufgebaut  werden.   
Einige   sinnvolle Beispiele:

Typ    Kommando		     Ergebnis

SUB    SUB $B$!		     TEST param	--> SUB	A0:TEST	param
ZEX    ZEX $!		     Y param --> ZEX Y param
LBR    LU -o $B$N $* -x	     COMMAND -L	--> LU -O E0:COMMAND -L	-X
CHN    CHAINDU $B$!	     SIZE --> CHAINDU E0:SIZE

Es l{~t	sich also eine Menge einstellen.

Installation:

Neben den Kommandozeilen lassen sich noch einige andere Dinge installieren. 
Diese  Installationen k|nnen einfach mit einem Patch-Utility (z.B. ZPATCH)  
oder einem  Debugger	 (z.B:	MONI)  durchgef}hrt werden.  Dazu  sollte  
einfach  das angegebene  Label im Programmtext (in der N{he des Anfangs) 
gesucht  werden.  In der  Klammer  dahinter steht die Adresse f}r Version 
2.2.  Ausschlaggebend  sind jedoch die Labels!

[QUIET>	 (013fh) definiert den programminternen	Quiet-Status. Setze auf	00H 
f}r nicht-Quiet  und auf 0ffh f}r Quiet. Wenn Quiet aktiv ist, werden alle	
Ausgaben unterdr}ckt. Der effektive Quiet-Status wird aus dem installierten 
Wert und  dem System-Quiet-Flag durch ein logisches ODER gebildet. 
Default: 00h = Nicht Quiet.

[USEINTPATH>  (0157h)  

steht  f}r Use Internal Path. In XRUN  kann  ein eigener Suchpfad  
installiert  und  benutzt  werden, wenn es  z.B.  f}r	 sehr  spezielle 
Anwendungen  benutzt werden soll. Setze	auf 0ffh f}r den internen  Suchpfad 
und auf 00h	f}r den	ZCPR3.3-Suchpfad.
Default: 00h = ZCPR3.3-Suchpfad.

[INTPATH> (0161h) 

ist der Ort, wo der interne Suchpfad installiert werden kann. Er  kann  bis 
zu 5 Eintr{ge umfassen und mu~ genau  wie  der ZCPR3.3-Suchpafd aufgebaut  
sein.  Ein  Eintrag	besteht	 also  aus Laufwerksangabe  (A:=1)  und 
Userangabe.  $ f}r den aktuellen Wert ist bei beiden zul{ssig. Das  Ende  
wird durch eine 00h als Laufwerk gekennzeichnet. 
Default: $$	00h

[ROOTONLY>  (014ah)  

gibt  an, ob nur im Wurzelverzeichnis  des Pfades gesucht werden soll. 
Setze 0ffh f}r das Wurzelverzeichnis und 00h f}r den gesamten Pfad.
Diese  Angabe  gilt  auch, wenn	der interne Pfad benutzt wird.	
Default:  00h  =gesamter Pfad.

[EXTTABLE>  (0178h)  

ist  die Tabelle der installierten Kommandos.  Sie ist 16 Eintr{ge  lang.	
Jeder Eintrag besteht aus dem Dateityp,	genau drei Zeichen  lang (ggf. mit 
Leerzeichen auff}llen), und daran direkt anschlie~end	das installierte 
Kommando  (max.	29 Zeichen + abschlie~ende 00h). Der Aufbau eines Kommandos 
ist oben  beschrieben.  Die Tabelle  endet, wenn  der  Dateityp  mit 00h	
beginnt.  Defaults:

   SUB SUB $!
   ZEX ZEX $!
   LBR L -o $B$F $*
   MAC EM $!
   PAS EP $!
   CHN CHAINDU $B$!

[DEFCMD>  (0390h) 

ist das Kommando, das	ausgef}hrt wird, sobalb	 keine	passende Datei  
gefunden	 wurde.	Es ist aufgebaut wie in	der EXTTABLE (30  Zeichen 
incl. 00h), jedoch steht davor kein Dateityp (wozu auch?). Es	beginnt	
also sofort  die Kommandozeile. 
Default:	LX / $!

Schlu~wort:

Das Programm ist freigegeben f}r die Public Domain, darf jedoch	 nicht
zu kommerziellen Zwecken weitergegeben oder benutzt werden, ohne meine
schriftliche Genehmigung einzuholen. Wer Fehler findet oder Verbesserungen 
vorzuschlagen hat, kann sich  an mich unter folgender Anschrift wenden:

Olaf Krumnow, Wiesnerring 19c, D-2050 Hamburg 80, (040) 735 35 16

