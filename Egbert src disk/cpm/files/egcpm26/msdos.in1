(***********************************************************
**   MSDOS.IN1 :  Lesen der MS-DOS-Diskette               **
***********************************************************)

(* SCAN_MSDIR sucht in MS-DOS-Directory nach File mit     *)
(* Namen SUCHNAME. Variable GEFUNDEN gibt Erfolg der      *)
(* Suche an. Wenn TRUE, werden die File-Parameter-        *)
(* Variablen auf die entspr. Werte gesetzt. Suche nach    *)
(* FIRST/NEXT bei Wildcards, Variable MSNAME wird auf     *)
(* tatsaechlich gefundenen Namen gesetzt.                 *)

procedure scan_msdir(first:boolean);
var i       : integer;
    ende    : boolean;
    vglname : string14;
begin
  gefunden:=false;
  if first then begin
    ende:=false;
    i:=0;
    dirsec:=pred(dirstart);
    diroff:=-32;
    end;
  while not ende and not gefunden do begin
    diroff:=(diroff+32) mod psize;
    if diroff=0 then begin
      dirsec:=succ(dirsec);
      rwsector(msdrive,dirsec,false,addr(dirbuf));
      end;
    i:=succ(i);
    vglname:='           ';
    move(dirbuf[diroff],vglname[1],11);
    gefunden:=gleichheit(suchname,vglname)
              and (dirbuf[diroff+11]<>$28);
    ende:=(dirbuf[diroff]=0) or (i=eintraege);
    end;
  if gefunden then begin
    msname:=vglname;
    zeit:=dirbuf[diroff+22]+dirbuf[diroff+23] shl 8;
    datum:=dirbuf[diroff+24]+dirbuf[diroff+25] shl 8;
    startgruppe:=dirbuf[diroff+26]+dirbuf[diroff+27] shl 8;
    datlength:=65536.0*dirbuf[diroff+30]
               +256.0*dirbuf[diroff+29]+dirbuf[diroff+28];
    end;
  end;

(* Directory der MS-DOS-Diskette ausgeben *)

procedure directory;
var spalte,i,anzahl : integer;
    options         : boolean;
begin
  spalte:=0;
  anzahl:=0;
  options:=false;
  if (length(befehl)>0) and (befehl[1]='F') then begin
    delete(befehl,1,1);
    options:=true;
    end;
  while (length(befehl)>0) and (befehl[1]=' ') do
    delete(befehl,1,1);
  generate_suchname;
  if length(suchname)=0 then suchname:='*.*';
  suchname:=expand(suchname);
  scan_msdir(true);                   (* Search for First *)
  while gefunden do begin
    anzahl:=succ(anzahl);
    if not options then begin
      if spalte mod 5=0 then write(chr(msdrive+$41));
      write(' : ');
      end;
    write(copy(msname,1,8),' ',copy(msname,9,3));
    if options then begin
      write(datlength:9:0);
      if datum=0 then write('':10)
      else write(datum and 31:4,'.',
                 datum shr 5 and 15:2,'.',
                 (80+datum shr 9) mod 100:2);
      if zeit<>0 then write(zeit shr 11:4,':',
                            zeit shr 5 and 63:2,':',
                            zeit shl 1 and 63:2);
      end
    else spalte:=succ(spalte);
    if spalte mod 5=0 then writeln;
    scan_msdir(false);                (* Search for Next *)
    end;
  if spalte mod 5>0 then writeln;
  writeln(anzahl:9,' Datei(en)',trunc(msspace/1024.0):10,
                                                  'k frei');
  end;

(* Einzelne Datei von MS-DOS nach CP/M kopieren *)

procedure lies;
var gruppe,laenge,n,m : integer;
begin
  if datlength>cpmspace then writeln(diskfull) else begin
    laenge:=succ(trunc((datlength-1.0)/128.0));
    assign(datei,chr(cpmdrive+$41)+':'+cpmname);
    rewrite(datei);
    gruppe:=startgruppe;
    while laenge>0 do begin
      m:=0;
      while (m<bufcl) and (gruppe<$FF8) do begin
        rwcluster(gruppe,false,addr(datbuf[m*clsize]));
        gruppe:=fat_eintrag(gruppe);
        m:=succ(m);
        end;
      n:=m*clsize shr 7;
      if n>laenge then n:=laenge;
      relog(cpmdrive);
      blockwrite(datei,datbuf,n);
      relog(msdrive);
      laenge:=laenge-n;
      end; {while}
    close(datei);
    relog(msdrive);       (* CLOSE schaltete auf CPMDRIVE *)
    end;
  end;

procedure readfile;
begin
  generate_suchname;
  cpmname:=suchname;
  if length(suchname)=0 then begin
    repeat
      write('MS-DOS-Dateiname : ');
      readln(suchname);
    until length(suchname)>0;
    write('CP/M - Dateiname : ');
    readln(cpmname);
    if length(cpmname)=0 then cpmname:=suchname;
    end;
  suchname:=expand(suchname);
  scan_msdir(true);
  if not gefunden then writeln(nofile)
  else if wildcard(suchname) then begin
    writeln(copying);
    while gefunden do begin
      cpmname:=compress(msname);
      writeln(cpmname);
      lies;
      scan_msdir(false);
      end;
    end
  else lies;
  end;

