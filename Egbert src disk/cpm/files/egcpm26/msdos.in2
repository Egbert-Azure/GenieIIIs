(***********************************************************
**   MSDOS.IN2 :  Schreiben der MS-DOS-Diskette           **
***********************************************************)

(* CP/M-File suchen. Sucht nach Datei des Namens SUCHNAME *)
(* (mit Wildcards). Wenn gefunden, wird CPMNAME auf den   *)
(* tatsaechlichen Dateinamen gesetzt.                     *)

procedure scan_cpmdir(first:boolean);
type zeiger  = ^element;
     element = record
                 name : string14;
                 next : zeiger;
                 end;
var fcb                 : array[0..12] of byte;
    buf                 : array[0..127] of byte;
    i,j                 : integer;
    neu,erster,p,anfang : zeiger;
begin
  if first then begin    (* FIFO-Liste mit Namen aufbauen *)
    relog(cpmdrive);
    mark(anfang);
    new(erster); neu:=erster;
    fcb[0]:=succ(cpmdrive);
    move(suchname[1],fcb[1],11);
    fcb[12]:=0;
    BDOS(26,addr(buf));               (* Set DMA *)
    i:=BDOS(17,addr(fcb));            (* Search for First *)
    p:=erster;
    if i=$FF then erster:=nil;
    while i<>$FF do begin
      neu^.name:='           ';
      for j:=1 to 11 do
        neu^.name[j]:=chr(buf[i shl 5+j] and $7F);
      p:=neu; new(neu); p^.next:=neu;
      i:=BDOS(18);                     (* Search for Next *)
      end;
    p^.next:=nil;
    release(neu);
    p:=erster;
    relog(msdrive);
    end;
  gefunden:=p<>nil;              (* ab hier FIFO auslesen *)
  if gefunden then begin
    cpmname:=p^.name;
    p:=p^.next;
    end
  else release(anfang);                  (* FIFO loeschen *)
  end;

(* Leeren MS-DOS-Directory-Eintrag suchen. GEFUNDEN wird *)
(* entsprechend gesetzt. Name und Daten der Datei werden *)
(* in den Eintrag eingesetzt. Neue Directory wird auf    *)
(* Diskette geschrieben.                                 *)

procedure make_eintrag(name:string14; length,start:integer);
var i : integer;
begin
  gefunden:=false;
  i:=0;
  dirsec:=pred(dirstart);
  diroff:=-32;
  repeat
    diroff:=(diroff+32) mod psize;
    if diroff=0 then begin
      dirsec:=succ(dirsec);
      rwsector(msdrive,dirsec,false,addr(dirbuf));
      end;
    i:=succ(i);
    gefunden:=dirbuf[diroff] in [0,$E5];
  until gefunden or (i=eintraege);
  if gefunden then begin
    move(name[1],dirbuf[diroff],11);
    fillchar(dirbuf[diroff+$0B],21,0);
    dirbuf[diroff+$0B]:=$20;
    dirbuf[diroff+$1A]:=lo(start);
    dirbuf[diroff+$1B]:=hi(start);
    dirbuf[diroff+$1C]:=length and 1 shl 7;
    dirbuf[diroff+$1D]:=lo(length shr 1);
    dirbuf[diroff+$1E]:=hi(length shr 1);
    rwsector(msdrive,dirsec,true,addr(dirbuf));
    end;
  end;

(* einzelnes File von CP/M nach MS-DOS kopieren *)

procedure schreib;
var gruppe,next,m,n,laenge : integer;
begin
  assign(datei,chr(cpmdrive+$41)+':'+cpmname);
  reset(datei);
  cpmlength:=filesize(datei);
  if msspace<128.0*cpmlength then writeln(diskfull)
  else begin
    gruppe:=firstfreecluster(1);
    make_eintrag(msname,cpmlength,gruppe);
    laenge:=cpmlength;
    while laenge>0 do begin
      n:=succ(bufgr) shr 7;
      if n>laenge then n:=laenge;
      laenge:=laenge-n;
      relog(cpmdrive);
      blockread(datei,datbuf,n);
      relog(msdrive);
      m:=pred(n shl 7) div clsize;
      for n:=0 to m do begin
        rwcluster(gruppe,true,addr(datbuf[n*clsize]));
        if (n=m) and (laenge=0) then next:=$FFF
          else next:=firstfreecluster(gruppe);
        fat_setzen(gruppe,next);
        gruppe:=next;
        end;
      end; {while}
    writefat;
    end;
  end;

procedure writefile;
begin
  generate_suchname;
  if length(suchname)=0 then begin
    repeat
      write('CP/M - Dateiname : ');
      readln(suchname);
    until length(suchname)>0;
    write('MS-DOS-Dateiname : ');
    readln(msname);
    if length(msname)=0 then msname:=suchname;
    end
  else msname:=suchname;
  suchname:=expand(suchname);
  scan_cpmdir(true);
  if not gefunden then writeln(nofile)
  else if wildcard(suchname) then begin
    writeln(copying);
    while gefunden do begin
      msname:=cpmname;
      cpmname:=compress(cpmname);
      writeln(cpmname);
      schreib;
      scan_cpmdir(false);
      end;
    end
  else begin
    msname:=expand(msname);
    cpmname:=compress(cpmname);
    schreib;
    scan_cpmdir(false);  (* um FIFO zu loeschen *)
    end;
  end;

