; QT-HOLTE.Z	QTERM Patches for Holte CP/M 3.0
;
; Version 1.0

.var	no	0		; false value
.var	yes	0xff   		; true value

.var	bdos	0005
.var	auxinp	0x03
.var	auxout	0x04
.var	auxistat	0x07
.var	auxostat	0x08

.var	break	0x3f
.var	dtr	0x3d
.var	norm	0x37

.org	0x0110			; modem input status
modist:	ld	c,auxistat
	call	bdos
	or	a
	ret			
				
.org	0x0120			; modem input
modin:	ld	c,auxinp
	call	bdos
	ret

.org	0x0130			; modem output status
modost:	ld	c,auxostat
	call	bdos
	or	a
	ret

.org	0x0140			; modem output
modout:	ld	e,a
	ld	c,auxout
	call	bdos
	ret

.org	0x0150
sbreak:	ret

.org	0x0160
ebreak:	ret

.org	0x0170
dtroff:	ret
	db	0x0a,0xfe,0x2b,0x2b,0x2b,0xfe,0x41,0x54
	db	0x48,0x30,0x0d

.org	0x0180
dtron:	ret

.org	0x0190
setbd:	jp	finbd

; The Baud Rate Table has entries from 38400 baud down to 300 baud.
;   There are 2 bytes per entry.  The second byte determines if the entry is
;   enabled or disabled (ffh=enabled; 00=disabled).  The first byte is passed
;   as the A value to the setbd subroutine.

.org	0x01a0
baudtb:
b38400:	db	0,no		;  38400
b19200:	db	0x0f,yes	;  19200
b9600:	db	0x0e,yes	;   9600
b4800:	db	0x0c,yes	;   4800
b2400:	db	0x0a,yes	;   2400
b1200:	db	0x08,yes	;   1200
b600:	db	0x07,yes	;    600
b300:	db	0x06,yes	;    300

.org	0x01b0
setmod:	jp	finmod

; Communication Mode Table.

.org	0x01c0			; communication mode table
modetb:
n17:	db	0x66
n18:	db	0xe6
n27:	db	0x6e
n28:	db	0xee
e17:	db	0x67
e18:	db	0xe7
e27:	db	0x6f
e28:	db	0xef
o17:	db	0x65
o18:	db	0xe5
o27:	db	0x6d
o28:	db	0xed

.org	0x01cc
resrvd:	db	0		; reserved for later use

.org	0x01cd			; protocol transfer size
xfersz:	db	8		; number of K to read/write during file xfers
				; Must be 1 / 2 / 4 / 8. Best left as 8 unless
				; disk is verrrrry slow. Drop to smaller value
				; if too many timeouts occur during "protocol"
				; file transfers (xmodem or kermit).
		
.org	0x01ce			; processor speed
speed:	db	10		; cpu speed in Mhz;
		
.org	0x01cf			; escape character
escape:	db	'\e'
		
.org	0x01d0			; signon message
signon:	db	'Holte CP/M PLUS Version f. AUX:\0'

		
.org	0x01f0			; clear screen
clrs:	db	'z' & 0x1f, 0	; clear screen string is Control-Z

.var	scrout	0x0109		; (a routine to print to CON: the
				; character in C)
.var	decout	0x010c		; (a routine to print to CON: a decimal value
				; in HL. Is available for VT100 and the like.)
		
.org	0x0200			; moveto routine
moveto:	push	hl		; save row,col
	ld	c,'\e'		; send escape
	call	scrout
	ld	c,'='		; send =
	call	scrout
	pop	hl		; get row,col
	ld	de,0x2020	; add offset
	add	hl,de
	push	hl		; and save
	ld	c,h		; send row+offset
	call	scrout
	pop	bc		; get col+offset
	jp	scrout		; send

; Terminal Capability Bits.  The eight bits stand for each of the following
;   strings.   They count from 01h=bright to 80h=clear-to-end-of-screen.

.var	b_brit	0b00000001	; 0: bright 	-- NOT mandatory
.var	b_dim	0b00000010	; 1: dim    	-- NOT mandatory
.var	b_ldel	0b00000100	; 2: delete line 	-- important
.var	b_lins	0b00001000	; 3: insert line 	-- important
.var	b_cdel	0b00010000	; 4: delete character   -- unused by QTERM
.var	b_cins	0b00100000	; 5: insert character   -- unused by QTERM
.var	b_ceol	0b01000000	; 6: clear to end-of-line -- important
.var	b_ceos	0b10000000	; 7: clear to end-of-screen-- important

.org	0x022f			; terminal capability bit map
tcbits:	db	0xff		; ff = support all bits

.org	0x0230
brites:	db	'\eR\0'		;bright

.org	0x0238
dims:	db	'\eS\0'		;dim

.org	0x0240
dlstr:	db	'\eW\0'		;delete line

.org	0x0248
ilstr:	db	'\eV\0'		;insert line

.org	0x0250
dcstr:	db	'\eQ\0'		;Delete character

.org	0x0258
icstr:	db	'\eP\0'		;Insert character

.org	0x0260
ceol:	db	24,'\0'		;Clear to end of line

.org	0x0268
ceos:	db	25,'\0'		;Clear to end of screen

; Entry and Exit hooks.  These are provided to perform custom initialisation
; on startup and on exit from QTERM.  They are invoked before any use is made
; of the screen or the port hardware.

.org	0x0270
entry:	ret

.org	0x0273
exit:	ret

.org	0x0276
user:	ret			; user subroutine (276h .. 278h)

.org	0x0279
kbmap:	ret			; keyboard map (279h .. 27bh)

.var	ilprmt	0x027c		; entry to in line prompt subroutine.

; Extra patch area if needed.  280h .. 4ffh

.org	0x0280

finbd:
	push	af		;Routine disassembliert aus QTAUX.COM
	ld	c,32
	ld	de,0x029a
	call	bdos
	ld	de,0x000f
	add	hl,de
	pop	af
	ld	(hl),a
	ld	c,32
	ld	de,0x02a4
	call	bdos
	ret
	
.org	0x029a
	db	0x14

.org	0x02a4
	db	0x15

.org	0x02a6
	db	0x01
			
.org	0x2b0

finmod:
	push	af		;Routine disassembliert aus QTAUX.COM
	ld	c,32
	ld	de,0x029a
	call	bdos
	ld	de,0xfffe
	add	hl,de
	pop	af
	ld	(hl),a
	ld	c,32
	ld	de,0x02a4
	call	bdos

do_ent:
do_exit:
	ret







