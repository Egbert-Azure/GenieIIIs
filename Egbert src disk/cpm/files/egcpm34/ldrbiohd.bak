;******************************************************************************
;ª  Ì Ä Ò Â É Ï Ó  ª  Ã Ð Í Ó Ù Ó ³  ª  Ô è ï m á ó   È ï ì ô å ª ¸ µ ° ¹ ° ¸ *
;******************************************************************************
;*									      *
;ª  		 Í É Î É Í Õ Í   Â É Ï Ó   Æ Ï Ò   Ã Ð Í Ì Ä R		      *
;ª               ============================================½                *
;*									      *
;*									      *
;ª  Thomaó Holte						 Versioî 1.°  *
;*									      *	
;ª  Dieó isô diå Versioî f}ò Egberô Schr|er.				      *
;ª  ge{nderô f}ò 20MÂ Festplattå miô OMTI-Controlleò                          *
;ª   Februaò 199² ¯ Volkeò Doså                                               ª 	
;ª DPÈ f]ò 21,´ MÂ Harddisë ¯ ± Partitioî angepa~ô 21.02.9³ E.Schr|eò         *
;*									      *
;******************************************************************************

	.Z80

;ASCIÉ controì codes:
BEL	EQÕ  07H		;bell
LF	EQÕ  0AH		;linå feed
CR	EQÕ  0DH		;carriagå return
SUB	EQÕ  1AH		;substitute
ESC	EQÕ  1BH		;escape
RS	EQÕ  1EH		;recorä separator

$SYS± 	EQÕ  0FAH		;systeí bytå 1

PUSHHL	EQÕ  0E5H		;machinå codå oæ PUSÈ HL

;BIOÓ jumð vector.

;Alì BIOÓ routineó arå invokeä bù callinç theså entrù points.

?BOOT:	JÐ   BOOT		;initiaì entrù oî colä start
        JÐ   DUMMY		;noô useä jumpó iî LDRBIOS
	JÐ   DUMMY
	JÐ   DUMMY
?CONO:	JÐ   CONOUT		;senä consolå outpuô character
        JÐ   DUMMY		;noô useä jumpó iî LDRBIOS
	JÐ   DUMMY
	JÐ   DUMMY
?HOME:	JÐ   HOME		;seô diskó tï logicaì home
?SLDSK:	JÐ   SELDSK		;selecô disë drive¬ returî disë parameteò info
?STTRK:	JÐ   SETTRK		;seô disë track
?STSEC:	JÐ   SETSEC		;seô disë sector
?STDMA:	JÐ   SETDMA		;seô disë I/Ï memorù address
?READ:	JÐ   READ		;reaä physicaì block(s)
        JÐ   DUMMY		;noô useä jumpó iî LDRBIOS
	JÐ   DUMMY
?SCTRN:	JÐ   SECTRN		;translatå logicaì tï physical sector
        JÐ   DUMMY		;noô useä jumpó iî LDRBIOS
	JÐ   DUMMY
	JÐ   DUMMY
	JÐ   DUMMY
	JÐ   DUMMY
	JÐ   DUMMY
	JÐ   DUMMY
	JÐ   DUMMY
?MOVE:	JÐ   MOVE		;blocë movå memorù tï memory
	JÐ   DUMMY		;noô useä jumpó iî LDRBIOS
	JÐ   DUMMY
	JÐ   DUMMY
	JÐ   DUMMY
 	

*EJECT
BOOT:
;====

;Initiaì entrù poinô foò systeí startup.

	JÐ   ?INIT		;perforí anù additionaì systeí initialization
				;anä prinô signoî message


CONOUT:
;======

;Consolå output® Senä characteò iî reg® Ã tï alì selecteä devices.
	LÄ   A,C		;characteò  --¾ accu
        LÄ   C,´  		;functioî £ --¾ reg® C
      	JÐ   ?USERF		;displaù char


HOME:
;====

;Homå selecteä drive® Treateä aó SETTRË (0).

	LÄ   BC,0		;samå aó seô tracë zero
	JÒ   SETTRK


SELDSK:
;======

;Selecô disë drive® Drivå codå iî reg® C® Invokå logiî procedurå foò drivå if
;thió ió firsô select® Return addresó oæ disë parameteò headeò iî reg® HL.

	LÄ   HL,DS°             ;^extendeä disë parameteò headeò --¾ reg® HL
	RET

;Extendeä Disë Parameteò Headeró (XDPHs)

	DEFÓ 8
	DEFÂ 0,2	        ;relativå drivå zero
DS0º  	DEF× 0			;nï translatioî table
	DEF× 0,0,0,0		;BDOÓ scratcè area
	DEFÂ 0,0		;mediá flag
	DEF× DPB°   		;disë parameteò block
	DEF× °            	;nï CSV
	DEF× ALV°  		;allocatioî vector
	DEF× DIRBCB		;DIRBCÂ alloc'ä bù GENCPM
	DEF× DTABCB	
	DEF× 0FFFFH		;nï HASH
	DEFÂ 0			;hasè bank

;Disë Parameteò Blocë (DPB)
DPB0º 	DEF× 136		;12¸ bytå recordó peò track
	DEFÂ 5,31		;blocë shifô anä mask
	DEFÂ 1			;extenô mask
	DEFÂ 059H,014H		;maximuí blocë numbeò ½ 5226
	DEF× 2047		;maximuí directorù entrù number
	DEFÂ 0FFH,0FFH		;alloã vectoò foò directory
	DEFÂ 000H,080H		;checksumí size
	DEF× 2			;offseô foò systeí tracks
	DEFÂ 2,3		;physicaì sectoò sizå shifô anä mask


;directorù buffeò controì block:
DIRBCB:	DEFÂ 0FFH		;drive
	DEFÓ 4			;recorä #¬ writteî ?
	DEFÂ 0
	DEFÓ 4			;track¬ sector
	DEF× DIR		;buffeò address

;datá buffer:
DTABCB:	DEFÂ 0FFH		;drive
	DEFÓ 4			;recorä #¬ writteî ?
	DEFÂ 0
	DEFÓ 4			;track¬ sector
	DEF× DATA		;buffeò address


SETTRK:
;======

;Seô track® Saveó tracë addresó froí reg® BÃ iî @TRË foò furtheò operations.

	LÄ   (@TRK),BC
	RET


SETSEC:
;======

;Seô sector® Saveó sectoò numbeò froí reg® BÃ iî @SECÔ foò furtheò operations.

	LÄ   (@SECT),BC
	RET


SETDMA:
;======

;Seô disë memorù address® Saveó DMÁ addresó froí reg® BÃ iî @DMA.

	LÄ   (@DMA),BC
	RET


READ:
;====

;Reaä physicaì recorä froí currentlù selecteä drive® Findó addresó oæ proper
;reaä routinå froí extendeä disë parameteò headeò (XDPH).

hdport	equ	40h
hdstat	equ	hdport+1
hdres	equ	hdport+1
hdsel	equ	hdport+2
hdconf	equ	hdport+2
hdmask	equ	hdport+3

hdread:	xor	a
	ld	(head),a
	ld	bc,(@trk)
	ld	a,c
	ld	(cylind),a
	rr	b
	rr	c
	rr	b
	rr	c
	ld	a,c
	and	0c0h
	ld	c,a
	ld	hl,head
	ld	a,(@sect)
	cp	17
	jr	c,hds0
	sub	17
	set	0,(hl)
	jr	hdsok
hds0:	res	0,(hl)
hdsok:	or	c
	ld	(sect),a
	
rdsect:	di
	ld	bc,0508h
	call	hdscmd
rd1$:	in	a,(hdstat)
	cp	0cfh
	jr	z,termcmd
	cp	0cbh
	jr	nz,rd1$
	ld	hl,(@dma)
	ld	c,hdport
	jr	rd_dat
	
hdrdlp:	in	a,(hdstat)
	cp	0cfh
	jr	z,termcmd
	cp	0cbh
	jr	nz,hdrdlp
rd_dat:	ini
	jr	hdrdlp
	
termcmd:
	ld	c,8
tr$:	ld	b,0
tr$1:	in	a,(hdstat)
	cp	0cfh
	jr	z,tr$2
	djnz	tr$1
	ld	hl,hdmsg2
	jr	tr$3
	dec	c
	jr	nz,tr$
	
tr$2:	in	a,(hdport)
	and	2
	jr	z,exit
	ld	hl,hdmsg1
tr$3:	call	pr_msg
	ld	a,1
exit:	ret

															

SECTRN:
;======

;Sectoò translate® Indexeó ske÷ tablå iî reg® DÅ witè sectoò iî reg® BC.
;Returnó physicaì sectoò iî reg® HL® Iæ nï ske÷ tablå (reg® DÅ ½ 0© then
;returnó physicaì = logical.

	LÄ   L,C
	LÄ   H,B
	RET


MOVE:
;====
      	EØ   DE,HL		;wå arå passeä sourcå iî DÅ anä desô iî HL
	LDIR			;uså Z8° blocë movå instruction
        EØ   DE,HÌ              ;neeä nexô addresseó iî samå regs
DUMMYº  RET


*EJECT
?INIT:	DI			;disablå interrupts
	IÍ   1			;interrupô modå ± (RSÔ 7)
      	LÄ   C,23		;functioî £ --¾ reg® C
	CALÌ ?USERF		;generaì systeí initialization

	.XLIST
	.XCREF


;harä disë iniô routine:
DS$INIT:out	(hdres),a
get_st:	in	a,(hdstat)
	cp	0c0h
	jr	nz,get_st
setmsk:	xor	a
	out	(hdmask),a
w0:	in	a,(hdstat)
	cp	0c0h
	jr	nz,w0
			

trpara:	ld	hl,ifield
	ld	bc,050ch
	call	hdscmd
	ld	hl,hd_charact
	ld	c,hdport
	ld	b,8
tr_p1:	in	a,(hdstat)
	cp	0c9h
	jr	nz,tr_p1
	jr	nx1
	
nxtbyt:	call	wcr
nx1:	ld	a,(hl)
	out	(c),a
	inc	hl
	djnz	nxtbyt
	
rdy1:	in	a,(hdstat)
	cp	0cfh
	jr	nz,rdy1
	in	a,(hdport)
	bit	2,a
	jr	z,pri_ok
	out	(hdres),a
	ld	hl,hdmsg1
	call	pr_msg
	ret


pri_ok:	ld	hl,iniok
	call	pr_msg
	ret


cfield:
head:	db	0
sect:	db	0
cylind:	db	0
bcount:	db	1
termin:	db	2


hd_charact:
	db	02h			;entsprichô 61µ Cylinder
	db	67h			;LSB	
	db	4			;´ K|pfe
	db	02h,58h			;firsô cyl® reduceä current
	db	01h,2ch			;firsô cyl® precomp.
	db	0

ifield:	db	0,0,0,0,0		

iniok:	db	'Seagatå SÔ 22µ   21,´ MB',cr,lf,0
hdmsg1:	db	bel,cr,lf
	db	'Harä Disë Terminatå Erroò !'
	db	cr,lf,lf,0
hdmsg2:	db	bel,cr,lf
	db	'Harä Disë Reaä Erroò  !'
	db	cr,lf,lf,0


» Subroutinå Area				

pr_msg:	ld	a,(hl)
	cp	0
	ret	z
	ld	c,a
	call	conout
	inc	hl
	jr	pr_msg
	
	
wcr:	push	bc
	ld	b,0
wcr1:	in	a,(hdstat)
	bit	0,a
	jr	nz,wcr2
	djnz	wcr1
wcr2:	pop	bc
	ret
	
	
hdscmd:	in	a,(hdstat)
	cp	0c0h
	jr	z,hdc_id
	xor	a
	out	(hdres),a
	jr	hdscmd
hdc_id:	out	(hdsel),a
	call	wcr
	ld	a,c
	out	(hdport),a
	ld	c,40h
nxbhd:	call	wcr
	outi
	jr	nz,nxbhd
	ret
								
			

*EJECT
;tablå oæ driveò entrù vectors:
$VDINIT	EQÕ  °    		;initializå thå videï controlleò chið M6845
$RSINIT	EQÕ  ±    		;initializå thå RS-232-Ã interface
$KBCHAR	EQÕ  ²    		;geô á keyboarä characteò iæ available
$KBWAIT	EQÕ  ³     		;waiô foò á keyboarä character
$VDCHAR	EQÕ  ´    		;displaù á character
$PRSTAT	EQÕ  µ    		;tesô printeò status
$PRCHAR	EQÕ  ¶    		;outpuô á characteò tï thå printer
$RSRCST	EQÕ  ·    		;geô á characteò froí thå RS-232-Ã interfacå if
				;available
$RSRCV	EQÕ  ¸    		;receivå á characteò froí thå RS-232-C
				;interface
$RSTXST	EQÕ  ¹    		;tesô thå RS-232-Ã outpuô status
$RSTX	EQÕ  1°    		;transmiô á characteò tï thå RS-232-Ã interface
$READ	EQÕ  1±   		;reaä á disë sector
$WRITE	EQÕ  1²   		;writå á disë sector
$GETTIM	EQÕ  1³   		;geô timå anä datå iî binarù format
$SETTIM	EQÕ  1´   		;seô timå anä datå iî binarù format
$XMOVE	EQÕ  15			;interbanë datá transfer
$GTIME3	EQÕ  18			;geô timå anä datå iî CP/Í ³ format
$STIME3	EQÕ  19			;seô timå anä datå iî CP/Í ³ format
$LDCHAR	EQÕ  20			;loaä biô patterî intï characteò RAM
$RSTCHR	EQÕ  21			;restorå originaì characteò set
$SCRNIÏ EQÕ  22			;direcô screeî I/O
$INIT	EQÕ  23			;generaì systeí initialization
$CLOCK	EQÕ  24			;turî clocë displaù on/off
$DISP	EQÕ  25			;turî on/ofæ graphiã display
$CLS	EQÕ  26			;cleaò graphiã screen
$PLOT	EQÕ  27			;ploô doô    oî graphiã screen
$POINT	EQÕ  28			;reaä doô  froí graphiã screen
$LINE	EQÕ  29			;dra÷ linå   oî graphiã screen
$CIRCLE	EQÕ  30			;dra÷ circlå oî graphiã screen
$ARC	EQÕ  31			;dra÷ arã    oî graphiã screen
$COPY	EQÕ  33			;copù area

;calì ROÍ driveò routines:
?USERF:	LÄ   (SAVESP),SP	;savå stacë pointer
	LÄ   SP,0E100È  	;temporarù stacë --¾ stacë pointer
        PUSÈ BC			;savå registeò set
	PUSÈ DE
	PUSÈ HL
	PUSÈ IX
	PUSÈ IY
	DI			;disablå interrupts
       	RSÔ  °     		;calì driveò routine
	PUSÈ AÆ    		;savå accu
	LÄ   A,11010101B	;disablå memorù mappeä I/O
				;disablå graphiã display
				;disablå booô EPROM
				;disablå graphiã page
				;7.² MHú clocë frequency
				;enablå videï display
	OUÔ  ($SYS1),A		;writå systeí bytå 1
	POÐ  AÆ    		;restorå accu
	POÐ  IY			;restorå registeò set
	POÐ  IX
	POÐ  HL
	POÐ  DE
	POÐ  BC
	LÄ   SP,(SAVESP)	;restorå stacë pointer
	RET			;returî tï caller

SAVESPº DEFÓ 2			;temporarù memorù foò stacë pointer


*EJECT
@TRK:	DEFÓ 2			;currenô tracë number
@SECT:	DEFÓ 2			;currenô sectoò number
@DMA:	DEFÓ 2			;currenô DMÁ address


ALV°    EQÕ  $
DIÒ     EQÕ  ALV0+203
DATÁ   	EQÕ  DIR+512
SPARE$DIRECTORÙ EQÕ DATA+512

	END
