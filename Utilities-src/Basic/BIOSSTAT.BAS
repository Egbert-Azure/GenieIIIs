1   REM Interaktive Biosaenderung (STAT DSK:)
2   REM Programmname BIOSSTAT.BAS
3   REM Richard Mauch Mannheimer Str. 12 7514 Eggenstein-Leopoldshafen 10/89
5   ADR = 60002!    'ADRESSE DPH EA62H
6   START  = 0      'WARMSTART
20  PRINT CHR$(26): PRINT "           Interaktive BIOS-Aenderung"
21  PRINT "           =========================="
22  PRINT "           Werte aus STAT DSK: eingeben"
30  PRINT
100 LINE INPUT "128 Byte Record Capacity    : ";BRC$:BRC = VAL(BRC$)
110 LINE INPUT "Kilobyte Drive Capacity     : ";DCB$:DCB = VAL(DCB$)
120 LINE INPUT "32 Byte Directory Entries   : ";BDE$:BDE = VAL(BDE$)
130 LINE INPUT "Checked Directory Entries   : ";CDE$:CDE = VAL(CDE$)
140 LINE INPUT "Records/ Extend             : ";RE$:RE = VAL(RE$)
150 LINE INPUT "Records/ Block              : ";RB$:RB = VAL(RB$)
160 LINE INPUT "Sectors/ Track              : ";ST$:ST = VAL(ST$)
170 LINE INPUT "Reserved Tracks             : ";RT$:RT = VAL(RT$)
190 LINE INPUT "Druckerausgabe (Eingabewerte und Speicher) (J/N) : ";DR$
191 POKE &H40,78
192 LINE INPUT "40-Spur-Laufwerk?  (J/N) : ";LW$
200 SPT = ST
201 DSM = DCB-1
202 DRM = BDE-1
203 CKS = CDE/4
204 OFF = RT
205 SPT1 = SPT\256:SPT2 = SPT MOD 256
206 DSM1 = DSM\256:DSM2 = DSM MOD 256
207 DRM1 = DRM\256:DRM2 = DRM MOD 256
208 CKS1 = CKS\256:CKS2 = CKS MOD 256
209 OFF1 = OFF\256:OFF2 = OFF MOD 256
210 BLS = 128*RB
211 IF BLS =  1024 THEN BSH = 3:BLM =   7
212 IF BLS =  2048 THEN BSH = 4:BLM =  15
213 IF BLS =  4096 THEN BSH = 5:BLM =  31
214 IF BLS =  8192 THEN BSH = 6:BLM =  63
215 IF BLS = 16384 THEN BSH = 7:BLM = 127
220 IF BLS =  1024 THEN EXM = 0
221 IF BLS =  2048 AND DSM < 256 THEN EXM =  1
222 IF BLS =  2048 AND DSM > 255 THEN EXM =  0
223 IF BLS =  4096 AND DSM < 256 THEN EXM =  3
224 IF BLS =  4096 AND DSM > 255 THEN EXM =  1
225 IF BLS =  8192 AND DSM < 256 THEN EXM =  7
226 IF BLS =  8192 AND DSM > 255 THEN EXM =  3
227 IF BLS = 16384 AND DSM < 256 THEN EXM = 15
228 IF BLS = 16384 AND DSM > 255 THEN EXM =  7
230 HI = BDE*32/BLS
231 IF HI =  1 THEN AL0 = &H80:AL1 = 0
232 IF HI =  2 THEN AL0 = &HC0:AL1 = 0
233 IF HI =  4 THEN AL0 = &HF0:AL1 = 0
234 IF HI =  8 THEN AL0 = &HFF:AL1 = 0
235 IF HI = 16 THEN AL0 = &HFF:AL1 = &HFF
241 POKE ADR,SPT2
242 POKE ADR+1,SPT1
243 POKE ADR+2,BSH
244 POKE ADR+3,BLM
245 POKE ADR+4,EXM
246 POKE ADR+5,DSM2
247 POKE ADR+6,DSM1
248 POKE ADR+7,DRM2
249 POKE ADR+8,DRM1
250 POKE ADR+9,AL0
251 POKE ADR+10,AL1
252 POKE ADR+11,CKS2
253 POKE ADR+12,CKS1
254 POKE ADR+13,OFF2
255 POKE ADR+14,OFF1
256 IF LW$ = "J" OR LW$ = "j" THEN POKE &H40,74
300 IF DR$ <> "J" THEN 2000
1000 LPRINT:LPRINT "Drive B: "
1005 LPRINT "========":LPRINT
1010 LPRINT "128 Byte Record Capacity    : ";:LPRINT TAB(35-LEN(BRC$));BRC$
1020 LPRINT "Kilobyte Drive Capacity     : ";:LPRINT TAB(35-LEN(DCB$));DCB$
1030 LPRINT "32 Byte Directory Entries   : ";:LPRINT TAB(35-LEN(BDE$));BDE$
1040 LPRINT "Checked Directory Entries   : ";:LPRINT TAB(35-LEN(CDE$));CDE$
1050 LPRINT "Records/ Extend             : ";:LPRINT TAB(35-LEN(RE$));RE$
1060 LPRINT "Records/ Block              : ";:LPRINT TAB(35-LEN(RB$));RB$
1070 LPRINT "Sectors/ Track              : ";:LPRINT TAB(35-LEN(ST$));ST$
1080 LPRINT "Reserved Tracks             : ";:LPRINT TAB(35-LEN(RT$));RT$
1100 FOR N = 59904! TO 60159!
1110 IF N/16 <> INT(N/16) THEN 1130
1120 LPRINT:LPRINT HEX$(N);"  ";
1130 A$ = HEX$(PEEK(N)):IF PEEK(N) < 16 THEN A$ = "0" + A$
1140 LPRINT A$;" ";
1150 NEXT N
1160 LPRINT:LPRINT
2000 CALL START
