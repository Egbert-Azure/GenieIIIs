;*******************************************************************************
;*         								       *
;*                          F R E M D . C O M 				       *
;*									       *
;*									       *	
;*               Utility f}r Genie IIIs mit Holte CP/M Plus.		       *
;*									       *
;* 									       *
;*									       *
;*   Dieses File enth{lt die Beschreibungen f}r verschiedene Fremdformate      *
;*   die mit dem HOLTE-CP/M gelesen werden k|nnen. Die fremde Diskette	       *
;*   wird in Laufwerk P eingeloggt. Anders als beim KONFIG mu~ nicht neu       *
;*   gebootet werden, weil die zu {nderden Parameter im Speicher gepatcht      *
;*   werden. Das HOLTE-CP/M ben|tigt folgende Informationen, um fremde         *
;*   Formate lesen zu k|nnen:						       *
;*									       *
;*      1. Den DPB Diskettenparameterblock                                     *
;*      2. Die DTB Drive control table 					       *
;*      3. Die Sector translation table					       *
;*									       *
;*   Sie m}ssen vorerst von Hand erstellt werden.                              *
;* 									       *
;*******************************************************************************


bel	equ	  07h			;auf dem Bildschirm auszugebende
cr	equ	  0dh			;Zeichen
lf	equ	  0ah
esc	equ	  1bh

bdos	equ	0005h			;Adresse des BDOS-Calls

wboot	equ	  00h			;BDOS-Funktion Warmstart
prtstr	equ	  09h			;BDOS-Funktion String ausgeben
dirbios	equ	   50			;BDOS-Funktion direkter BIOS-Aufruf


xmove	equ    0f857h			;BIOS-Funktion Interbankmemorymove
move	equ    0f84bh			;BIOS-Funktion Speicherverschieben

xtail	equ	0082h			;Hier steht der eingegebene Name


	org	100h


start	ld	hl,xtail		;der eingegebene name mu~ erst
	ld	de,nambuff		;gesichert werden, da CP/M ihn 
	ld	bc,10			;sonst }berschreibt
	ldir
	ld	de,hallo		;DE zeigt auf Hallomeldung
	ld	c,prtstr		;BDOS-Call #9 gibt String aus bis	
	call	bdos			;Endekennung '$'
					;Jetzt muss der Name erkannt werden

	ld	hl,startlist		;HL zeigt auf Beginn der Namensliste
	ld	(buff),hl		;zwischenspeichern
loopy	ld	de,nambuff		;DE zeigt auf eingegeben Namen
loopx	ld	a,(de)			;Ist das Ende dieses Namens schon
	cp	00h			;erreicht ? Dann steht dort 00h
	jr	z,einstell		;Also wurde ein g}ltiger Name eingegeben
	cp	(hl)			;sonst mit Listeneintrag vergleichen
	jr	nz,dernicht		;bei falschem Buchstaben n{chsten Eintrag
	inc	hl			;war aber richtig, also Zeiger DE und
	inc	de			;HL ein byte weiterstellen
	jr	loopx			;und so weiter und so fort
dernicht
	ld	hl,(buff)		;der Zeiger wird wieder auf den Anfang
	ld	bc,13			;des Eintrages gestellt, dann wird 13
	add	hl,bc			;Zeichen weitergestellt, hier ist
	ld	a,(hl)			;entweder 00h als Endekennung oder
	cp	00			;der Beginn eines neuen Eintrages
	jr	z,falsename		;Wenn kein Name erkannt wurde, FEHLER
	ld	(buff),hl		;HL wieder zwischenspeichern
	jr	loopy
	


; FALSENAME
;	 :  ist ein falscher Name eingegeben worden, wird die Liste aller
;	    g}ltigen Namen ausgegeben.		

falsename				;Unterprogramm, falls falscher
					;Fremdformatname eingegeben wurde 
	ld	de,err1			;Fehlermeldungzeichenkette
	ld	c,prtstr		;BDOS-Call #9, String ausgeben
	call	bdos
	ld	de,startlist		;erstes Element in der Liste der
loop	ld	(buff),de		;zul{ssigen Namen, wird zwischen-
	ld	c,prtstr		;gespeichert um sp{ter incrementiert
	call	bdos			;zu werden. Alle Namen werden ausgegeben
	ld	hl,(buff)		;bis zur Endekennung '00'. Die Namen
	ld	bc,13			;sind 13 bytes weit entfernt.
	add	hl,bc			;HL zeigt jetzt auf n{chsten Namen
	ex	de,hl			;bzw. '00'. DE wird mit HL geladen
	ld	a,(de)			;wegen BDOS-Call #9
	cp	00
	jr	nz,loop			;Schleife bis letzter Name ausgegeben
	ld	c,wboot			;wurde, dann Warmstart, zur}ck
	call	bdos			;ins Betriebssystem


; EINSTELL  :  Hier wird der jeweilige Parameterblock dann ins RAM
;	       }bertragen.


einstell
	ld	c,dirbios		;Zuerst wird }ber ein BDOS-Call die
					;Adresse der DRIVETABLE geholt, hier
					;stehen die Adressen aller DPH's
	ld	de,biospb		;Zum BDOS-Call wird ein Parameterblock
	call	bdos			;}bergeben.HL+30 zeigt dann auf den 
	ld	bc,30			;XDPH von Laufwerk P. Der Inhalt von
	add	hl,bc			;HL wird nach DE kopiert, DE enth{lt 
	ld	e,(hl)			;dann die Adresse des XDPH's. Sie wird
	inc	hl			;in buff2 zwischengespeichert. 
	ld	d,(hl)			;
	ld	(buff2),de		;
	ld	bc,0100h		;Es soll ein Speicherladevorgang von
	call	xmove			;Bank 0 nach Bank 1 vorgenommen werden
	ld	hl,buf4			;buf4 ist die Zieladresse, kopiert wird
	ld	de,(buff2)		;der komplette XDPH, um Zugriff auf DPB
	ld	bc,dphend-buf4		;und Adresse der Skewtabelle zu haben
	call	move			;Speicherladeoperation ausf}hren

; jetzt wird zuerst der DPB ins Common }bertragen
	
	ld	hl,(buff)		;HL zeigt auf den Namen des gew{hlten
	ld	bc,11			;Formates, nach 11 Bytes kommt die
	add	hl,bc			;Adresse des dazugeh|rigen Parameter-
	ld	e,(hl)			;blockes, angefangen mit dem DPB
	inc	hl			;de zeigt auf den zu ladenden DPB
	ld	d,(hl)			;
	ld	hl,(dpb)		;HL zeigt auf den g}ltigen DPB im Common
	ld	bc,17			;So ein DPB ist 17 Bytes gro~
	push	de			;DE zeigt auf den Beginn des Parameter-
	call	move			;blockes und wird noch ben|tigt	
		
; jetzt wird die DCT des Formates }bertragen

	pop	hl			;Da ist wieder der Parameterblockanfang
	ld	bc,17			;Der DPB ist 17 Bytes lang, jetzt kommt
	add	hl,bc			;die Drive Control Table
	push	hl			;Diese Adresse wird wieder gespeichert
	ld	bc,0001			;von Bank 1 nach Bank 0
	call	xmove			;sollen die Daten verladen werden
	ex	de,hl			;DE ist Quelladresse			
	ld	hl,(buff2)		;adresse des XPDH in Bank 0
	ld	bc,25			;Nach dem XDPH von Drive P kommt sein
	add	hl,bc			;DCT, dort soll es hin gehen
	ld	bc,5			;5 bytes
	call	move			;und weg damit 
		
; und jetzt die Skewtabelle noch r}ber und fertig !!!!!!!!

	pop	hl			;jetzt wird die L{nge der zu kopierenden 
	ld	bc,5			;Skewtabelle ermittelt, sie kommt direkt
	add	hl,bc			;nach dem DCT
	push	hl			;zwischenspeichern
	ld	bc,0001			;Interbank move von Bank 1 zu Bank 0
	call	xmove

	pop	de			
	ld	a,(de)			;L{nge der Skewtabellle
	inc	de			;zeigt jetzt auf den Beginn der Skew-
	ld	hl,(buf4)		;tabelle, Die Adresse der Tabelle 
	ld	b,0			;steht als erstes word des XDPH's
	ld	c,a			;Die L{nge war im Accu gespeichert
 	call	move			;und r}ber damit, und schon fertig
	
	
		
; jetzt den Erfolg der Aktion melden	

	ld	hl,(buff)		;zeigt auf den Namen des gew{hlten
	ld	de,eintrag		;Formates, er wird in den Ausgabe-
	ld	bc,10			;string reinkopiert
	ldir
	ld	de,gutis		;zeigt auf die Meldung
	ld	c,prtstr		;BDOS-Call String ausgeben
	call	bdos			;ausf}hren
	ld	c,wboot			;und mit Warmstart zur}ck
	call	bdos		 	;ins Betriebssystem	

; Liste der auszugebenden Zeichenketten

hallo	db	cr,lf,esc,'R','FREMD.COM',esc,'S',' stellt Laufwerk P auf fremde Formate um.',cr,lf
	db	'  Nur lauff{hig auf Genie IIIs mit Holte CP/M + !',cr,lf,'$'
err1	db	cr,lf,bel,bel,'Falschen Formatnamen angegeben  !!!!!!!!!!!!',cr,lf
err2	db	'Folgende Formatnamen sind erlaubt :',cr,lf,lf,'$'
gutis	db	cr,lf,'Das neue Format '
eintrag	ds	10	
	db	'ist jetzt f}r Laufwerk P g}ltig !',cr,lf,'$'



; Zwischenbuffer f}r Registerpaar DE oder HL
buff	dw	0000h
buff2	dw	0000h			;enth{lt die Adresse des XDPH von LW P
nambuff	ds	10			;hier wird der gew{hlte Name vor dem
					;]berschreiben dutch das CP/M gesichert


	
biospb					;Der BIOS PARAMETER BLOCK mu~ angegeben
fnum	db	22			;werden, wenn }ber BDOS-Call 50 ein
ainh	db	00			;direkter BIOS-Aufruf stattfinden soll
bcinh	dw	0000h			;Hier werden zu }bergebende Parameter
deinh	dw	0000h			;abgelegt.
hlinh	dw	0000h			;Die Funktionsnummer fnum=22 heisst	
					;halt hole ^DRVTBL
buf4	dw	0000			;Puffer f}r den XDPH von Laufwerk P
	dw	0,0,0,0
	db	0,0
dpb	dw	0000
	dw	0000,0000
	dw	0000,0000
	dw	0000
	db	0
dct	db	0
	db	0
	db	0
	db	0
	db	0
dphend					;Ende diese Puffers



; Liste der m|glichen Fremdformate
; Die L{nge der Zeichenkette ist auf 10 beschr{nkt.
	   
startlist

	db	'S80 DSDD  ','$'
	dw	s80dsdd
	db	'D80 DSDD  ','$'
	dw	d80dsdd
	db	'PROF#4    ','$'
	dw	prof4
	db	'ALPHA     ','$'
	dw	alpha
	db	'IBM-PC    ','$' 
	dw	ibmpc
	db	'KONTRON   ','$'
	dw	kontron
	db	'RAIR      ','$'
	dw	rair
	db	'VORTEX    ','$'
	dw	vortex
	db	00	
	
endlist

s80dsdd	dw	0050h		; SPT : 128 byte records / track
	db	  05h		; BSH : block shift
	db	  1fh		; BSM : block mask
	db	  03h		; EXM : extend mask
	dw	00bfh		; DSM : maximum block number
	dw	00ffh		; DRM : maximum directory entry number
	db	 0c0h		; AL0 : allocation vector 0
	db	  00h		; AL1 : allocation vector 1
	dw	0040h		; CKS : checksum size
	dw	  03h		; OFF : offset for system tracks
	db	  03h		; PSH : physical sector size shift
	db	  07h		; PHM : physical sector size mask
	
	db	  70h		; Byte 1 der drive control table
	db	  80h
	db	  02		; interleavingfaktor
	db	  10		; sector count / track
	db	  80		; number of usable tracks
	
	db	  51		; l{nge der Skewtabelle
				; Skewtabelle

	db	  0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19
	db	  20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36
	db	  37,38,39,40,41,42,43,44,45,46,47,48,49,50
	
	
	
d80dsdd	dw	0050h		; SPT : 128 byte records / track
	db	  05h		; BSH : block shift
	db	  1fh		; BSM : block mask
	db	  03h		; EXM : extend mask
	dw	00c7h		; DSM : maximum block number
	dw	00ffh		; DRM : maximum directory entry number
	db	 0c0h		; AL0 : allocation vector 0
	db	  00h		; AL1 : allocation vector 1
	dw	0040h		; CKS : checksum size
	dw	  00h		; OFF : offset for system tracks
	db	  03h		; PSH : physical sector size shift
	db	  07h		; PHM : physical sector size mask
	
	db	  70h		; Byte 1 der drive control table
	db	  80h
	db	  02		; interleavingfaktor
	db	  10		; sector count / track
	db	  80		; number of usable tracks
	
	db	  51		; l{nge der Skewtabelle
				; Skewtabelle

	db	  0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19
	db	  20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36
	db	  37,38,39,40,41,42,43,44,45,46,47,48,49,50
	

prof4	dw	0050h		; SPT : 128 byte records / track
	db	  04h		; BSH : block shift
	db	  0fh		; BSM : block mask
	db	  00h		; EXM : extend mask
	dw	017fh		; DSM : maximum block number
	dw	007fh		; DRM : maximum directory entry number
	db	 0c0h		; AL0 : allocation vector 0
	db	  00h		; AL1 : allocation vector 1
	dw	0020h		; CKS : checksum size
	dw	  03h		; OFF : offset for system tracks
	db	  02h		; PSH : physical sector size shift
	db	  03h		; PHM : physical sector size mask
	
	db	  78h		; Byte 1 der drive control table
	db	  80h
	db	  02		; interleavingfaktor
	db	  20		; sector count / track
	db	  80		; number of usable tracks
	
	db	  20		; l{nge der Skewtabelle
				; Skewtabelle

	db	  0,2,4,6,8,1,3,5,7,9,10,12,14,16,18,11,13,15,17,19		


alpha 	dw	0050h		; SPT : 128 byte records / track
	db	  04h		; BSH : block shift
	db	  0fh		; BSM : block mask
	db	  00h		; EXM : extend mask
	dw	018ah		; DSM : maximum block number
	dw	007fh		; DRM : maximum directory entry number
	db	 0c0h		; AL0 : allocation vector 0
	db	  00h		; AL1 : allocation vector 1
	dw	0020h		; CKS : checksum size
	dw	  01h		; OFF : offset for system tracks
	db	  03h		; PSH : physical sector size shift
	db	  07h		; PHM : physical sector size mask
	
	db	  78h		; Byte 1 der drive control table
	db	 0c0h
	db	  01		; interleavingfaktor
	db	  10		; sector count / track
	db	  80		; number of usable tracks
	
	db	  51		; l{nge der Skewtabelle
				; Skewtabelle

	db	  0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19
	db	  20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36
	db	  37,38,39,40,41,42,43,44,45,46,47,48,49,50
	


ibmpc	dw	0020h		; SPT : 128 byte records / track
	db	  04h		; BSH : block shift
	db	  0fh		; BSM : block mask
	db	  01h		; EXM : extend mask
	dw	009dh		; DSM : maximum block number
	dw	003fh		; DRM : maximum directory entry number
	db	  80h		; AL0 : allocation vector 0
	db	  00h		; AL1 : allocation vector 1
	dw	0010h		; CKS : checksum size
	dw	  01h		; OFF : offset for system tracks
	db	  02h		; PSH : physical sector size shift
	db	  03h		; PHM : physical sector size mask
	
	db	  7ch		; Byte 1 der drive control table
	db	  80h
	db	    1		; interleavingfaktor
	db	   18		; sector count / track
	db	   40		; number of usable tracks
	
	db	  51		; l{nge der Skewtabelle
				; Skewtabelle

	db	  0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19
	db	  20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36
	db	  37,38,39,40,41,42,43,44,45,46,47,48,49,50
	


kontron	dw	0020h		; SPT : 128 byte records / track
	db	  04h		; BSH : block shift
	db	  0fh		; BSM : block mask
	db	  00h		; EXM : extend mask
	dw	012bh		; DSM : maximum block number
	dw	00ffh		; DRM : maximum directory entry number
	db	 0f0h		; AL0 : allocation vector 0
	db	  00h		; AL1 : allocation vector 1
	dw	0040h		; CKS : checksum size
	dw	  04h		; OFF : offset for system tracks
	db	  01h		; PSH : physical sector size shift
	db	  01h		; PHM : physical sector size mask
	
	db	  78h		; Byte 1 der drive control table
	db	  40h
	db	    1		; interleavingfaktor
	db	   32		; sector count / track
	db	   77		; number of usable tracks
	
	db	   16		; l{nge der Skewtabelle
				; Skewtabelle

	db	  0,3,6,9,12,15,2,5,8,11,14,1,4,7,10,13


rair	dw	0004h		; SPT : 128 byte records / track
	db	  04h		; BSH : block shift
	db	  0fh		; BSM : block mask
	db	  00h		; EXM : extend mask
	dw	0186h		; DSM : maximum block number
	dw	007fh		; DRM : maximum directory entry number
	db	 0c0h		; AL0 : allocation vector 0
	db	  00h		; AL1 : allocation vector 1
	dw	0020h		; CKS : checksum size
	dw	  24h		; OFF : offset for system tracks
	db	  02h		; PSH : physical sector size shift
	db	  03h		; PHM : physical sector size mask
	
	db	  78h		; Byte 1 der drive control table
	db	  80h
	db	    2		; interleavingfaktor
	db	   20		; sector count / track
	db	   80		; number of usable tracks
	
	db	  51		; l{nge der Skewtabelle
				; Skewtabelle

	db	  0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19
	db	  20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36
	db	  37,38,39,40,41,42,43,44,45,46,47,48,49,50
	



vortex	dw	0048h		; SPT : 128 byte records / track
	db	  05h		; BSH : block shift
	db	  1fh		; BSM : block mask
	db	  03h		; EXM : extend mask
	dw	00b0h		; DSM : maximum block number
	dw	007fh		; DRM : maximum directory entry number
	db	 080h		; AL0 : allocation vector 0
	db	  00h		; AL1 : allocation vector 1
	dw	0020h		; CKS : checksum size
	dw	  01h		; OFF : offset for system tracks
	db	  02h		; PSH : physical sector size shift
	db	  03h		; PHM : physical sector size mask
	
	db	  78h		; Byte 1 der drive control table
	db	  80h
	db	  01		; interleavingfaktor
	db	  18		; sector count / track
	db	  80		; number of usable tracks
	
	db	  51		; l{nge der Skewtabelle
				; Skewtabelle

	db	  0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19
	db	  20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36
	db	  37,38,39,40,41,42,43,44,45,46,47,48,49,50
	





	end	start
	
		 	