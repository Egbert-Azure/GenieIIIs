;
; Dieses Programm soll den Parametersatz f}r GDOS 80 SP DSDD f}r 
; Laufwerk P: einstellen, um mit einem Diskeditor auf diese Disketten
; zugreifen zu k|nnen.
;
;


bel	equ	07h
cr	equ	0dh
lf	equ	0ah
esc	equ	1bh

	

bdos	equ	 0005h				;BDOS-Einsprung
wboot	equ	 0000h				;Warmboot-Einsprung

move	equ	0f84bh				;Speichertransfer
xmove	equ	0f857h				;set Interbank move
	
prtstr	equ	   9				;print string
dirbios equ	  50				;direct BIOS call via BDOS


drvtbl	equ	  22				;ret. Drvive Table
userf	equ	  30				;additional BIOS function

read	equ	  11				;Diskettensektor lesen 
transf	equ	  15				;Interbank transfer
	
	org	100h				;start der TPA

begin	jp	start				;springe an Anfang des Progr.
	
	

; Zwischenbuffer f}r Registerpaar DE oder HL
buffer	dw	0000h			;enth{lt die Adressse der DRVTBL
bbuff	dw	0000h			;enth{lt die Adresse des XDPH von LW B
buff2	dw	0000h			;enth{lt die Adresse des XDPH von LW P


	
biospb					;Der BIOS PARAMETER BLOCK mu~ angegeben
fnum	db	22			;werden, wenn }ber BDOS-Call 50 ein
ainh	db	00			;direkter BIOS-Aufruf stattfinden soll
bcinh	dw	0000h			;Hier werden zu }bergebende Parameter
deinh	dw	0000h			;abgelegt.
hlinh	dw	0000h			;Die Funktionsnummer fnum=22 heisst	
					;halt hole ^DRVTBL
buf4	dw	0000			;Puffer f}r den XDPH von Laufwerk P
	dw	0,0,0,0
	db	0,0
dpb	dw	0000
	dw	0000,0000
	dw	0000,0000
	dw	0000
	db	0
dct	db	0
	db	0
	db	0
	db	0
	db	0
dphend					;Ende diese Puffers



gdos				;Diskettenformat GDOS 2.4 DSDD

	dw	0048h		; SPT : 128 byte records / track
	db	  06h		; BSH : block shift
	db	  3fh		; BSM : block mask
	db	  07h		; EXM : extend mask
	dw	0059h		; DSM : maximum block number
	dw	00ffh		; DRM : maximum directory entry number
	db	 080h		; AL0 : allocation vector 0
	db	  00h		; AL1 : allocation vector 1
	dw	0040h		; CKS : checksum size
	dw	  00h		; OFF : offset for system tracks
	db	  01h		; PSH : physical sector size shift
	db	  01h		; PHM : physical sector size mask
	
gdct	db	  60h		; Byte 1 der drive control table
	db	  40h		; 256 Bytes / sector
	db	  02		; interleavingfaktor
	db	  36		; sector count / track
	db	  80		; number of usable tracks
	
	db	  51		; l{nge der Skewtabelle
				; Skewtabelle

	db	  0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19
	db	  20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36
	db	  37,38,39,40,41,42,43,44,45,46,47,48,49,50

bdct	db	70h		;Byte 1 der Original-DCT von Laufwerk B:
	db	80h		;512 Bytes / sector
	db	02h		;interleaving factor
	db	20		;sector count / track
	db	80		;number of usable tracks
	



start	call	hello		;zuerst wird eine Begr}~ung ausgegeben
	
	call	einstell	;dann werden die GDOS-Parameter eingestellt

	jp	wboot		;zur}ck ins Betriebssystem
	
	
	
; HELLO     :  Es wird eine Begr}~ung ausgegeben.

hello	ld	c,prtstr	;BDOS function print string
	ld	de,text		;DE zeigt auf den auszugebenden Text
	call	bdos		;CP/M f}hrt den Befehl aus
	ret			;zur}ck zum Aurufer
	
text	defb	cr,lf,esc,'R','GDOSPARA.COM',esc,'S'
	defb	' stellt Laufwerk P: auf GDOS 80 SP DSDD ein.',cr,lf
	defb	'    Nur lauff{hig auf Genie IIIs mit Holte CP/M + !'
	defb	cr,lf			
	defb	'$'	



; EINSTELL  :  Hier wird der Parameterblock dann ins RAM }bertragen.


einstell
	ld	c,dirbios		;Zuerst wird }ber ein BDOS-Call die
					;Adresse der DRIVETABLE geholt, hier
					;stehen die Adressen aller DPH's
	ld	de,biospb		;Zum BDOS-Call wird ein Parameterblock
	call	bdos			;}bergeben.HL+30 zeigt dann auf den 
	ld	(buffer),hl		
	ld	bc,30			;XDPH von Laufwerk P. Der Inhalt von
	add	hl,bc			;HL wird nach DE kopiert, DE enth{lt 
	ld	e,(hl)			;dann die Adresse des XDPH's. Sie wird
	inc	hl			;in buff2 zwischengespeichert. 
	ld	d,(hl)			;
	ld	(buff2),de		;
	ld	bc,0100h		;Es soll ein Speicherladevorgang von
	call	xmove			;Bank 0 nach Bank 1 vorgenommen werden
	ld	hl,buf4			;buf4 ist die Zieladresse, kopiert wird
	ld	de,(buff2)		;der komplette XDPH, um Zugriff auf DPB
	ld	bc,dphend-buf4		;und Adresse der Skewtabelle zu haben
	call	move			;Speicherladeoperation ausf}hren

; jetzt wird zuerst der DPB ins Common }bertragen
	ld	de,gdos			;DE zeigt auf den DPB mit GDOS-Format
	ld	hl,(dpb)		;HL zeigt auf den g}ltigen DPB im Common
	ld	bc,17			;So ein DPB ist 17 Bytes gro~
	push	de			;DE zeigt auf den Beginn des Parameter-
	call	move			;blockes und wird noch ben|tigt	
		

; jetzt wird die DCT des Formates }bertragen

	pop	hl			;Da ist wieder der Parameterblockanfang
	ld	bc,17			;Der DPB ist 17 Bytes lang, jetzt kommt
	add	hl,bc			;die Drive Control Table
	push	hl			;Diese Adresse wird wieder gespeichert
	ld	bc,0001			;von Bank 1 nach Bank 0
	call	xmove			;sollen die Daten verladen werden
	ex	de,hl			;DE ist Quelladresse			
	ld	hl,(buff2)		;adresse des XPDH in Bank 0
	ld	bc,25			;Nach dem XDPH von Drive P kommt sein
	add	hl,bc			;DCT, dort soll es hin gehen
	ld	bc,5			;5 bytes
	call	move			;und weg damit 



; und jetzt die Skewtabelle noch r}ber und fertig !!!!!!!!

	pop	hl			;jetzt wird die L{nge der zu kopierenden 
	ld	bc,5			;Skewtabelle ermittelt, sie kommt direkt
	add	hl,bc			;nach dem DCT
	push	hl			;zwischenspeichern
	ld	bc,0001			;Interbank move von Bank 1 zu Bank 0
	call	xmove

	pop	de			
	ld	a,(de)			;L{nge der Skewtabellle
	inc	de			;zeigt jetzt auf den Beginn der Skew-
	ld	hl,(buf4)		;tabelle, Die Adresse der Tabelle 
	ld	b,0			;steht als erstes word des XDPH's
	ld	c,a			;Die L{nge war im Accu gespeichert
 	call	move			;und r}ber damit, und schon fertig

	ret				;zur}ck zum Aufrufer