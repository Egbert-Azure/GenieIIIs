;
;			L I E S G D O S . Z 8 0
;		(c) 1992 by Egbert Schroeer & Volker Dose
;
;	Dieses Programm ermoeglicht es, mit der CP/M Version von Holte
;	Disketten im Format des GDOS 2.4, doppelseitig, doppelte Dichte
;	mit 80 Spuren zu lesen sowie Files dieser Diskette nach CP/M
; 	zu uebertragen.
;	Hierzu wird zunaechst der DPB fuer GDOS 2.4 und die DCT ins Ram
;	uebertragen. Danach wird das Inhaltsverzeichnis der GDOS Diskette
;	angezeigt. Die Inhaltsverzeichnisse der GDOS-Disketten sind mit
;	einer anderen Adressmarke, naemlich 'Adressmarke Inhaltsverzeichnis'
;	geschrieben. Beim Lesen des Inhaltsverzeichnis ist also mit einem
;	Lesefehler zu rechnen. Vom CP/M wird der Fehler 'DATA Record deleted'
;	gemeldet.
;
;
;


bel	equ	07h
cr	equ	0dh
lf	equ	0ah
esc	equ	1bh

	

bdos	equ	 0005h				;BDOS-Einsprung
wboot	equ	 0000h				;Warmboot-Einsprung

move	equ	0f84bh				;Speichertransfer
xmove	equ	0f857h				;set Interbank move
	
prtstr	equ	   9				;print string
dirbios equ	  50				;direct BIOS call via BDOS


drvtbl	equ	  22				;ret. Drvive Table
userf	equ	  30				;additional BIOS function

read	equ	  11				;Diskettensektor lesen 
transf	equ	  15				;Interbank transfer
	
	org	100h				;start der TPA

begin	jp	start				;springe an Anfang des Progr.


gdct	db	  60h		; Byte 1 der drive control table
	db	  40h		; 256 Bytes / sector
	db	  02		; interleavingfaktor
	db	  36		; sector count / track
	db	  80		; number of usable tracks
	

bdct	db	70h		;Byte 1 der Original-DCT von Laufwerk B:
	db	80h		;512 Bytes / sector
	db	02h		;interleaving factor
	db	20		;sector count / track
	db	80		;number of usable trakcs
	



start	call	hello		;zuerst wird eine Begr}~ung ausgegeben
	
	call	einstell	;dann werden die GDOS-Parameter eingestellt
	
	call	liesboot	;der Bootsector der GDOS-Disk wird gelesen
				;und }berpr}ft, ob GDOS 2.4 80 Sp. DSDD	
	
	call	showdir		;zeigt das Inhaltsverz. der GDOS-Disk an
	
	call	restaur		;die alten Parameter von LW B: wieder zur}ck
	
	jp	wboot		;dann wird ins CP/M zur}ckgespungen
	


; HELLO     :  Es wird eine Begr}~ung ausgegeben.

hello	ld	c,prtstr	;BDOS function print string
	ld	de,text		;DE zeigt auf den auszugebenden Text
	call	bdos		;CP/M f}hrt den Befehl aus
	ret			;zur}ck zum Aurufer
	
text	defb	cr,lf,esc,'R','LIESGDOS.COM',esc,'S'
	defb	' kopiert Dateien von GDOS 2.4 Disketten nach CP/M.',cr,lf
	defb	'    Nur lauff{hig auf Genie IIIs mit Holte CP/M + !'
	defb	cr,lf			
	defb	'$'	



; EINSTELL  :  Hier wird der Parameterblock dann ins RAM }bertragen.
;		Es mu~ nur die DCT }bertragen werden, weil sowieso nur
;		sektorweise auf die Diskette zugegrifen wird.


einstell
	ld	bc,0001			;von Bank 1 nach Bank 0
	call	xmove			;sollen die Daten verladen werden
	ld	de,gdct
	ld	hl,10ddh		;Adr. des DCTs von LW B:
	ld	bc,5			;5 bytes
	call	move			;und weg damit 
		
	ret				;zur}ck zum Aufrufer
	
	
	
		
; LIESBOOT	Der Bootsector der GDOS-Disk wird gelesen. Das dritte Byte
;		dieses Sectors gibt den Startblock des Inhaltsverzeichnisses
;		an. Dieses Byte mu~ den Wert 60h = 96d haben.

liesboot
	ld	a,11h		;Banknummer des Datenbuffers = 1 (ob. nibble)
				;Laufwerksnummer             = 1 (un. nibble)
	ld	b,00h		;sector # = 0
	ld	e,00h		;track  # = 0
	ld	hl,bootbuf	;^Datenbuffer
	ld	c,read		;Funktion 11 = Diskettensector lesen
	call	system
	
	cp	00h		;ist die Funktion ohne Fehler abgelaufen ?
	jr	nz,fehler	;falls Fehler, anzeigen 	
	
		
	ld	hl,bootbuf	;das dritte Byte mu~ 60h sein !!
	inc	hl
	inc	hl		;HL zeigt jetzt darauf
	ld	a,(hl)		;Inhalt von HL in den Accu
	cp	60h		;Ist der Inhalt 60h ??
	ret	z		;dann kehre zum Hauptprogramm zur}ck
	cp	30h		;einige Disketten haben hier auch 30 stehen
	ret	z
	
fehler	ld	de,errmsg	;ansonsten gib fehler aus
	ld	c,9		;}ber BDOS-Call prtstr
	call	bdos
	call	restaur		;die Daten von Laufwerk B: wieder zur}ck
	call	wboot		;und zur}ck zum CP/M

errmsg	defb	bel,cr,lf,'Diskette nicht lesbar oder falsches Format !',lf,cr
	defb	' Nur GDOS-Disketten mit 80 Spuren DSDD - Format m|glich !'	
	defb	lf,cr
	defb	'$'


; RESTAUR	restauriert den Original DPB und die DTB von Laufwerk B:

restaur	ld	bc,0001h	;Interbank move von Bank 1 nach 0
	call	xmove		;BIOS-call ausf}hren
	ld	hl,10ddh	;Zieladresse, DCT von LW B:
	ld	de,bdct		;Quelladresse, Original Drive Control Table
	ld	bc,5		;5 Bytes sollen }bertragen werden
	call	move		;und ab damit
	ret


; SHOWDIR	soll das Inhaltsverzeichnis der GDOS-Disk in den Speicher
;		bringen und auf dem Bildschirm anzeigen.

showdir	ld	hl,1000h	;das Directory soll ab hier ins RAM
	ld	e,40		;es liegt in Spur 40
	ld	a,11h		;siehe	'liesboot'
	ld	b,2		;sectornummer


loop	ld	c,read
	push	de
	push	af
	push	bc		;sectornummer sichern
	push	hl		;die bufferadresse wird gesichert und weiter
	call	system
	ld	a,b		;Ende des Directory erreicht ?
	
	cp	29		;die DIR-Area ist 29 Sectoren gro~
	jr	z,daswars	;wenn der letzte DIR-sector eingelesen wurde
	ld	bc,256		;addiere Bufferadresse mit sectorl{nge
	pop	hl		;bufferadresse restaurieren
	add	hl,bc		;Fehler mehr
	pop	bc		;sectornummer wieder holen
	inc	b		;n[chsten DIR-sector lesen
	pop	af
	pop	de
	jr	loop		
daswars
	ld	bc,256		;am Ende der Tabelle muss eine
	pop	hl		;ENDE-Kennung eingetragen werden
	add	hl,bc
	ld	a,'0'
	ld	(hl),a
	
	pop	hl		;Stack wieder in Ordnung bringen
	pop	af
	pop	de
				;jetzt wird das Inhaltsverzeichnis der
				;Diskette angezeigt
	ld	hl,1000h	;ab hier ist das Directory im RAM
dloop	ld	a,(hl)		;erstes Byte des File Directry Entry
	cp	'0'		;ist das Ende der Tabelle erreicht ?
	jr	z,schluss	;dann nicht weiter anzeigen
	bit	7,a		;ist es ein Folgeeintrag ?
	jr	nz,nexter	;dann den n{chsten Eintrag holen		
	bit	4,a		;ist der Eintrag belegt ?
	jr	z,nexter	;wenn leer, n{chsten Eintrag begucken
	push	hl		;Dieser Eintrag ist belegt, und soll angezeigt
				;werden.
	ld	de,dummi	;der Filename soll in ein dummi-feld eingetragen
	ld	bc,5		;werden, dieses dummifeld kann einfacher 
	add	hl,bc		;angezeigt werden.
	ld	bc,8		;l{nge des filenames
	ldir
	
	inc	de		;der schr{gstrich vor der Extension soll nicht
	ld	bc,3		;}berschrieben werden
	ldir			;auch die extension }bertragen
	ld	c,prtstr	;BDOS-Call print string	
	ld	de,dummi	;zeigt auf den String
	call	bdos		;anzeigen
	pop	hl		;HL zeigt wieder auf den Anfang des FDE
nexter	ld	bc,32		;alle 32 Byte beginnt ein neuer FDE
	add	hl,bc		;
	jr	dloop	
	
schluss	ret

dummi	defb	'FILENAME/EXT   kopieren (J/N) ?',cr,lf	
	defb	'$'
					


; SYSTEM	Unterprogramm um die Systemroutinen des Holte CP/M
;		ansprechen zu k|nnen.

system	push	bc
	ld	ix,(wboot+1)	;warm boot entry point	=> reg IX
	ld	bc,3*(userf-1)	;offset to system entry point
	add	ix,bc		;calculate jump adress
	pop	bc
	jp	(ix)		;perform system call and return to caller
		 	
bootbuf 	defs	256

	end	begin
