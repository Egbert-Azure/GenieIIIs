(*********************************************************************
**        D.IN6  Dateienliste entsprechend Optionen anzeigen        **
*********************************************************************)

(* 930624 Tilmann Reh *)

var TotalLines,BlockLines,AlreadyLines : integer;

(* Ausgegebene Zeilen zaehlen und u.U. auf Tastendruck warten. *)

procedure IncDisplayLine;
var c : char;

  procedure AbortProgram;
  begin
    write(AbortMsg);
    BDOS(14,LoggedDrive);
    BDOS(32,LoggedUser);
    halt;
    end;

begin
  if BreakControlC then AbortProgram;
  if not PageMode then exit;
  DisplayLine:=succ(DisplayLine);
  if DisplayLine>=pred(PageLength) then begin
    write(PressAnyKey);
    read(kbd,c); write(^m);
    if c=^c then AbortProgram;
    DisplayLine:=0;
    if not Horizontal then if Display<>OneColumn
      then writeln('':(ConsoleWidth-20) shr 1,'--------------------');
    AlreadyLines:=AlreadyLines+BlockLines;
    BlockLines:=pred(PageLength);
    if BlockLines>TotalLines-AlreadyLines
      then BlockLines:=TotalLines-AlreadyLines;
    end;
  end;

(* Zahlenwert (Real) als String mit Tausenderpunkten umwandeln. *)

function PointedNumber(r:Real):string20;
var s : string20;
    i : integer;
begin
  str(r:1:0,s);
  i:=length(s)-2; while(i>1) do begin insert('.',s,i); i:=i-3; end;
  PointedNumber:=s;
  end;

(* Umrechnung von CP/M-Datum und Zeit, Anzeige. *)

procedure WriteDateTime(Date,Time:integer);
const MonthBegin : array[boolean,0..12] of integer
                 = ((0,0,31,59,90,120,151,181,212,243,273,304,334),
                    (0,0,31,60,91,121,152,182,213,244,274,305,335));
var   j,m,d      : integer;
      Switch     : boolean;
begin
  if (Date=0) or not StampsActive then write('':15) else begin
    d:=365; j:=78;
    while Date>d do begin
      Date:=Date-d;
      j:=succ(j); Switch:=j mod 4=0;
      d:=365+integer(Switch);
      end;
    m:=12; while Date<=MonthBegin[Switch,m] do m:=pred(m);
    d:=Date-MonthBegin[Switch,m];
    write(d:2,'.',m div 10,m mod 10,'.',j,'  ');
    if hi(Time)>=$10 then write(hi(Time) shr 4) else write(' ');
    write(hi(Time) and $F,':',lo(Time) shr 4,lo(Time) and $F);
    end;
  end;

(* Directory unter Beruecksichtigung aller denkbaren Optionen anzeigen *)

procedure DisplayDirectory(d,u:byte);
var Row,fn      : integer;
    Columns,Col : byte;
    s           : string20;
begin
  Columns:=1; case Display of
    TwoColumn  : if ConsoleWidth>=78 then Columns:=2;
    FourColumn : begin
                   Columns:=(ConsoleWidth+2) div 20;
                   if Columns>4 then Columns:=4;
                   end;
    Wide       : Columns:=(ConsoleWidth+2) shr 4;
    end;
  if ShowHeader then begin
    writeln; IncDisplayLine;
    ArrayToString(DirLabel,s,Justify);
    writeln(DirectoryOf,char(d+$61-$20*byte(UpperCase)),u,': ',
            ConvertCaseString(s,UpperCase));
    IncDisplayLine;
    writeln; IncDisplayLine;
    end;
  TotalLines:=succ(pred(ActFileCount) div Columns);
  AlreadyLines:=0; BlockLines:=pred(PageLength-DisplayLine);
  if not PageMode or (BlockLines>TotalLines) then BlockLines:=TotalLines;
  if ActFileCount>0 then
  for Row:=0 to pred(TotalLines) do for Col:=0 to pred(Columns) do begin
    if Horizontal then fn:=Row*Columns+Col
    else fn:=AlreadyLines*Columns + Col*BlockLines + (Row-AlreadyLines);
    if fn<ActFileCount then with DirDat^[fn] do begin
      if ShowFiles then begin
        ArrayToString(FileNameExt,s,Justify);
        write(ConvertCaseString(s,UpperCase));
        case Display of
          FourColumn : if Size>0.0 then
                         write(succ(trunc((Size-1.0)/1024.0)):4,'k')
                       else write('   0k');
          Wide       : write(' ');
          else begin
            write(Size:8:0,'  ');
            WriteDateTime(Date,Time);
            if ShowAttributes then begin
              if AttrRO then write('  R') else write('  _');
              if AttrSYS then write('S') else write('_');
              if AttrAR then write('A') else write('_');
              if Attr1 then write('1') else write('_');
              if Attr2 then write('2') else write('_');
              if Attr3 then write('3') else write('_');
              if Attr4 then write('4') else write('_');
              case ProtectionMode of
                $80..$FF : write(' Read');
                $40..$7F : write(' Write');
                $20..$3F : write(' Delete');
                end;
              end;  {if ShowAttributes}
            end;    {else begin       }
          end;      {case Display     }
        if Col<pred(Columns) then write('   ') else begin
          writeln; IncDisplayLine;
          end;
        end;        {if ShowFiles     }
      end           {if .. with DirDat}
    else if Col=pred(Columns) then begin writeln; IncDisplayLine; end;
    end;            {for Row,Col      }
  if ShowSummary then begin
    writeln(PointedNumber(TotalSize):12,BytesMsg,ActFileCount:4,FilesMsg,
            PointedNumber(FreeSpace):16,FreeMsg);
    IncDisplayLine;
    writeln(PointedNumber(BlockSize*TotalAllocated):12,AllocatedMsg,
            FreeEntries:24,FreeDirMsg);
    IncDisplayLine;
    end;
  end;
