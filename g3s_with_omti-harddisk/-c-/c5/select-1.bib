(****************************************************************************)
(*   Bibliotheks-Modul SELEKT-1.BIB                                         *)
(*   CP/M Version TextColor und Background entfernt/ersetzt                 *)
(*   Vertikale Menueauswahl mit Cursortasten/RETURN oder Anfangsbuchstaben  *)
(*   Das Modul benoetigt die angepasste Zeicheneingabe LiesZeichen.         *)
(*                                                                          *)
(*   p Selekt(x,y,l:integer; Var Menue; Anzahl:integer; var Wahl : integer  *)
(*                                                                          *)
(*   Dabei ist                                                              *)
(*     x,y : die Bildschirmposition fuer den ersten Menuepunkt              *)
(*     Menue : ein ARRAY[a..b] OF STRING[k]  a und b beliebig               *)
(*     l     : k+1 (einfach SizeOf(Menue[a]))                               *)
(*     Anzahl : die Anzahl der angezeigten Menuepunkte (1..25)              *)
(*     Wahl   : die Nummer des gewaehlten Punktes (1..Anzahl) oder          *)
(*                 0 : wenn <ESC> gedrueckt wurde                           *)
(*                -1 : wenn das Menue mit der Cursortaste <links>,          *)
(*                -2 : wenn es mit der Taste <rechts> verlassen wurde.      *)
(*              Wenn das Fragezeichen <?> eingegeben wurde, so ist das      *)
(*              7. Bit von Wahl gesetzt ( fuer Hilfe! ).                    *)
(*                                                                          *)
(*   Wichtig: Das der Leuchtbalken zu Beginn auf Wahl gesetzt wird, ist die *)
(*            entsprechende Variable vor dem Aufruf zu initialisieren.      *)
(****************************************************************************)

procedure Selekt(x,y,l:integer; Var Menue; Anzahl:integer; var Wahl:integer);
  type str127 = string[127];
  var M : array[1..25] of ^str127;
      c : char;
      i,j : integer;
  procedure reverse; begin LowVideo end;
  procedure normal;  begin NormVideo end;
  procedure ChangeHilight(var a1,a2 : integer);
    begin
      gotoxy(x,pred(y+a1)); write(M[a1]^);
      gotoxy(x,pred(y+a2)); reverse; write(M[a2]^); normal;
      a1:=a2;  gotoxy(x,pred(y+a2));
    end; (* ChangeHilight *)
  begin (* Selekt *)
    Wahl:=Wahl and 127;
    for i:=1 to Anzahl do
      begin
        M[i]:= ptr(addr(Menue)+pred(i)*l);
        gotoxy(x,pred(y+i));
        if i=Wahl then begin reverse; write(M[i]^); normal end
                  else write(M[i]^)
      end;
    i:=Wahl; gotoxy(x,pred(y+i));
    repeat
      if i<>Wahl then ChangeHilight(i,Wahl);
      LiesZeichen(c);
      case c of
        ^X : if Wahl=Anzahl then Wahl:=1 else Wahl:=succ(Wahl);
        ^E : if Wahl=1 then Wahl:=Anzahl else Wahl:=pred(Wahl);
        ^M : ;
        '?': begin Wahl:=Wahl or 128; c:=^M end;
        #27: begin Wahl:=0; c:=^M end;
        ^S : begin Wahl:=-1; c:=^M end;
        ^D : begin Wahl:=-2; c:=^M end
        else for j:=1 to Anzahl do
          if upcase(M[j]^[1])=upcase(c) then
            begin Wahl:=j; c:=^M; if Wahl<>i then ChangeHilight(i,Wahl) end
      end; (* case *)
    until c=^M
  end;