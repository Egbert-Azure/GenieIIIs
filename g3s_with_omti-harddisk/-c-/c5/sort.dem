(****************************************************************************)
(* Demo-Programm zu Qsort.Bib                                               *)
(****************************************************************************)

program sortierdemo;

(*$I qsort.bib *)
(*$I test.1 *)

function sortkleinerokay : boolean;
  label exit;
  var i : integer;
  begin
    for i:=1 to pred(sortzahl) do
      if kleiner(sortarray[succ(i)],sortarray[i]) then
        begin sortkleinerokay:=false; goto exit end;
    sortkleinerokay:=true;
    exit:
  end;

function sortgroesserokay : boolean;
  label exit;
  var i : integer;
  begin
    for i:=1 to pred(sortzahl) do
      if groesser(sortarray[succ(i)],sortarray[i]) then
        begin sortgroesserokay:=false; goto exit end;
    sortgroesserokay:=true;
    exit:
  end;

procedure MinimalAenderung;
  var i,p1,p2 : integer; t : SortType;
  begin
    for i:=1 to SortZahl DIV 10 do
      begin
        p1:=succ(random(SortZahl));
        p2:=succ(random(SortZahl));
        t:=SortArray[p1]; SortArray[p1]:=SortArray[p2]; SortArray[p2]:=t
      end
  end;

begin
  ClrScr;
  writeln('Demonstrationsprogramm zu den Sortier-Moduln');
  writeln('____________________________________________');
  writeln;
  writeln('Sortiert werden ',SortZahl,' Elemente der Groesse ',
          SizeOf(SortArray[1]),' Bytes');
  ZufallsFeld;
  write('Zufallsfeld wird aufsteigend sortiert'); readln; write(^G);
  Sortiere(SortArray,SizeOf(SortArray),1,SortZahl,ofs(Kleiner),1,SortZahl);
  write(^G); if not SortKleinerOkay then writeln('SortierFehler!');
  write('Sortiertes Feld wird nochmals aufsteigend sortiert');
  readln; write(^G);
  Sortiere(SortArray,SizeOf(SortArray),1,SortZahl,ofs(Kleiner),1,SortZahl);
  write(^G); if not SortKleinerOkay then writeln('Sortierfehler!');
  MinimalAenderungen;
  writeln('Sortiertes Feld wird zu 10% veraendert und');
  write('nochmals aufsteigend sortiert');
  readln; write(^G);
  Sortiere(SortArray,SizeOf(SortArray),1,SortZahl,ofs(kleiner),1,SortZahl);
  write('nochmals aufsteigend sortiert');
  readln; write(^G);
  Sortiere(SortArray,SizeOf(SortArray),1,SortZahl,ofs(kleiner),1,SortZahl);
  write(^G); if not SortKleinerOkay then writeln('Sortierfehler!');
  writeln('Sortiertes Feld wird ');
  write('absteigend sortiert');
  readln; write(^G);
  Sortiere(SortArray,SizeOf(SortArray),1,SortZahl,ofs(Groesser),1,SortZahl);
  write(^G); if not SortGroesserOkay then writeln('Sortierfehler!');
  writeln('Fertig')
end.