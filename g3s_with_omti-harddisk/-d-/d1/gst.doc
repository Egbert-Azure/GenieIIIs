
                          Graphic Script Tools
                              Version 0.3

                              Dave Ramsey
----------------------------------------------------------------- 
Version .3D - Updated for V4LIBD.           Bob Dean July 5, 1990 
-----------------------------------------------------------------

   GST, (G)raphic (S)cript (T)ools, are a set of tools designed to allow 
the user to exploit the new extended TCAP in the Z-System. The current 
set of tools is minimal and does not represent a completed effort. In 
particular, the tools currently do not respect the Z-System quiet flag, 
nor do they check all the input parameters. This set is a very early set 
released to the user community for comments and suggestions.

   This library contains the following tools:

BOX    - which allows the user to draw boxes on the screen;
ERABOX - to erase these boxes;
HBAR   - which allows the user to draw horizontal bars;
VBAR   - which allows the user to draw vertical bars;
ERABAR - to erase these bars;
LINE   - to draw horizontal and vertical lines on the screen;
ERALINE- to erase horizontal and vertical lines from the screen;
CORNER - to draw one of the four corner graphic characters on the screen;
ISEC   - to draw one of the five intersection chars on the screen;
GXYMSG - which allows the user to echo a line to the screen at a
         specific row and column; and
GOTOXY - which places the cursor at a specific location on the screen.

   At this time, these tools comprise a complete set, at least from my 
own viewpoint. If anyone can suggest other tools that might be useful 
within ARUNZ and ZEX scripts, please feel free to let me know. 
Obviously, if you are an assembly language programmer, these tools are 
trivially simple. If you program yourself, take one as a template and 
add yet another tool to the set. If you don't program, let me know and 
I'll add it for you, if I understand what you want and if it makes sense 
to me.

   It is possible that these tools do not represent what the user
community wants. It is for this reason that I have released these early 
versions - to get comments and to not waste my efforts if these are not 
the sorts of graphic script tools that are wanted. If you like what you 
see, let me know and I'll continue developing them. If not, well, I'll 
continue developing them for my own use but I certainly won't make as 
much effort to make them robust and reliant. And I might not bother to 
release them. In any case, leave a few comments about what you would 
want these tools to do. Or write to me at:

               Dave Ramsey
               1188 Green Holly Drive
               Annapolis, MD 21401
               (301) 757-8413

I can't accept collect calls (sorry!) but if you want to spend your 
nickel, I'll talk about whatever you'd like!

   Enhancements over version 0.1 include corrected stack initialization 
code, extended tcap awareness, and removal of self-modifying code. (We 
have to consider the future what with the Z280 slowly beginning to make 
its presence felt!) Some routines do check some of their parameters 
although none of them yet check all parameters. (I may develop some 
generic routines to check values for row, column, height, width, etc., 
that can be back-referenced at run-time against the Z-System TCAP. It 
will be another good exercise, I suppose.)

   Things to add in future versions include selection of STANDOUT or 
STANDEND (dim or reverse video versus highlighted text) for text 
messages and graphics objects, case selection switches for these tools 
(unless Jay Sage follows throw with his thoughts on providing access to 
the command line before it has been capitalized), and more Z-System 
awareness generally.  One bug fixed in this version relates to stack 
usage. The 0.1 version setup a stack on the tail end of the CCP.  This 
would obviously corrupt the CCP. I didn't notice this because I use ZCPR 
3.3 and an RCP installed as an RSX. I hope that the version 0.1 tools 
didn't cause too many headaches! If anyone wants to tell me how to do 
some things better, feel free! I enjoy getting expert critiques as it 
helps clarify my coding practices.

   As a side issue, perhaps we might want to add a new system segment 
to Z-System for graphics commands or add them to our RCPs. For myself, 
running ZCPR 3.3, and loading my RCP as an RSX below the CCP, RCP size 
is not problem and I routinely switch between RCPs and even drop them 
altogether when needed. I understand that NZ-COM and ZCPR 3.4 users have 
even more flexibility in this regard, so I will await your comments on 
this idea.

   It is also possible, for instance, that the user community might want 
a single, general-purpose, graphic script program that draws everything 
based upon user input. I, personally, don't like that idea as I believe 
that the small tools approach of Z-System (and Unix, from whence it 
came) represent the best philosophy when it comes to software 
engineering.

   So, pull the Graphic Script Tools out and have at it. Let me know 
what you want to do with them and what features they need or shouldn't 
have and I'll see what I can do about implementing them.
